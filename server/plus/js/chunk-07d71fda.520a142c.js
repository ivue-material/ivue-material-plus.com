(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-07d71fda"],{"14d9":function(e,t,l){"use strict";var a=l("23e7"),n=l("7b0b"),o=l("07fa"),c=l("3a34"),r=l("3511"),u=l("d039"),i=u((function(){return 4294967297!==[].push.call({length:4294967296},1)})),d=!function(){try{Object.defineProperty([],"length",{writable:!1}).push()}catch(e){return e instanceof TypeError}}();a({target:"Array",proto:!0,arity:1,forced:i||d},{push:function(e){var t=n(this),l=o(t),a=arguments.length;r(l+a);for(var u=0;u<a;u++)t[l]=arguments[u],l++;return c(t,l),l}})},3511:function(e,t){var l=TypeError,a=9007199254740991;e.exports=function(e){if(e>a)throw l("Maximum allowed index exceeded");return e}},"3a34":function(e,t,l){"use strict";var a=l("83ab"),n=l("e8b5"),o=TypeError,c=Object.getOwnPropertyDescriptor,r=a&&!function(){if(void 0!==this)return!0;try{Object.defineProperty([],"length",{writable:!1}).length=1}catch(e){return e instanceof TypeError}}();e.exports=r?function(e,t){if(n(e)&&!c(e,"length").writable)throw o("Cannot set read only .length");return e.length=t}:function(e,t){return e.length=t}},"6f9e":function(e,t,l){"use strict";l.r(t);var a=l("7a23");const n={default:"<template>\n    <h3>普通</h3>\n    <ivue-select v-model=\"model\" style=\"width:200px\">\n        <ivue-option v-for=\"item in cityList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</ivue-option>\n    </ivue-select>\n    <h3>渐变颜色</h3>\n    <ivue-select\n        v-model=\"model\"\n        :selected-color=\"['#E91E63', '#9C27B0']\"\n        :hover-color=\"['#673AB7', '#2196F3']\"\n        style=\"width:200px\"\n    >\n        <ivue-option v-for=\"item in cityList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</ivue-option>\n    </ivue-select>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst cityList = ref([\n    {\n        value: 'New York',\n        label: 'New York',\n    },\n    {\n        value: 'London',\n        label: 'London',\n    },\n    {\n        value: 'Sydney',\n        label: 'Sydney',\n    },\n    {\n        value: 'Ottawa',\n        label: 'Ottawa',\n    },\n    {\n        value: 'Paris',\n        label: 'Paris',\n    },\n    {\n        value: 'Canberra',\n        label: 'Canberra',\n    },\n]);\n\nconst model = ref('');\n<\/script>\n",disabled:"<template>\n    <h3>禁用禁用整个选择器</h3>\n    <ivue-select v-model=\"model\" disabled style=\"width:200px\">\n        <ivue-option v-for=\"item in cityList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</ivue-option>\n    </ivue-select>\n\n    <h3>禁用当前项</h3>\n    <ivue-select v-model=\"model1\" style=\"width:200px\">\n        <ivue-option value=\"beijing\">New York</ivue-option>\n        <ivue-option value=\"shanghai\" disabled>London</ivue-option>\n        <ivue-option value=\"shenzhen\">Sydney</ivue-option>\n    </ivue-select>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst cityList = ref([\n    {\n        value: 'New York',\n        label: 'New York',\n    },\n    {\n        value: 'London',\n        label: 'London',\n    },\n    {\n        value: 'Sydney',\n        label: 'Sydney',\n    },\n    {\n        value: 'Ottawa',\n        label: 'Ottawa',\n    },\n    {\n        value: 'Paris',\n        label: 'Paris',\n    },\n    {\n        value: 'Canberra',\n        label: 'Canberra',\n    },\n]);\n\nconst model = ref('');\nconst model1 = ref('');\n<\/script>\n",clearable:"<template>\n    <ivue-select v-model=\"model\" clearable style=\"width:200px\">\n        <ivue-option v-for=\"item in cityList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</ivue-option>\n    </ivue-select>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst cityList = ref([\n    {\n        value: 'New York',\n        label: 'New York',\n    },\n    {\n        value: 'London',\n        label: 'London',\n    },\n    {\n        value: 'Sydney',\n        label: 'Sydney',\n    },\n    {\n        value: 'Ottawa',\n        label: 'Ottawa',\n    },\n    {\n        value: 'Paris',\n        label: 'Paris',\n    },\n    {\n        value: 'Canberra',\n        label: 'Canberra',\n    },\n]);\n\nconst model = ref('');\n<\/script>\n",group:'<template>\n    <h3>普通分组</h3>\n    <ivue-select v-model="model" style="width:200px">\n        <ivue-option-group label="Hot Cities">\n            <ivue-option\n                v-for="item in cityList1"\n                :value="item.value"\n                :key="item.value"\n            >{{ item.label }}</ivue-option>\n        </ivue-option-group>\n        <ivue-option-group label="Other Cities">\n            <ivue-option\n                v-for="item in cityList2"\n                :value="item.value"\n                :key="item.value"\n            >{{ item.label }}</ivue-option>\n        </ivue-option-group>\n    </ivue-select>\n    <h3>普通分组 开启过滤</h3>\n    <ivue-select v-model="model" filterable style="width:200px">\n        <ivue-option-group label="Hot Cities">\n            <ivue-option\n                v-for="item in cityList1"\n                :value="item.value"\n                :key="item.value"\n            >{{ item.label }}</ivue-option>\n        </ivue-option-group>\n        <ivue-option-group label="Other Cities">\n            <ivue-option\n                v-for="item in cityList2"\n                :value="item.value"\n                :key="item.value"\n            >{{ item.label }}</ivue-option>\n        </ivue-option-group>\n    </ivue-select>\n    <h3>分组开启过滤, 开启搜索时，隐藏其他 option-group 组件头</h3>\n    <ivue-select v-model="model" filterable filterable-hidden-group style="width:200px">\n        <ivue-option-group label="Hot Cities">\n            <ivue-option\n                v-for="item in cityList1"\n                :value="item.value"\n                :key="item.value"\n            >{{ item.label }}</ivue-option>\n        </ivue-option-group>\n        <ivue-option-group label="Other Cities">\n            <ivue-option\n                v-for="item in cityList2"\n                :value="item.value"\n                :key="item.value"\n            >{{ item.label }}</ivue-option>\n        </ivue-option-group>\n    </ivue-select>\n</template>\n\n<script setup>\nimport { ref } from \'vue\';\n\nconst cityList1 = ref([\n    {\n        value: \'New York\',\n        label: \'New York\',\n    },\n    {\n        value: \'London\',\n        label: \'London\',\n    },\n    {\n        value: \'Sydney\',\n        label: \'Sydney\',\n    },\n]);\n\nconst cityList2 = ref([\n    {\n        value: \'Ottawa\',\n        label: \'Ottawa\',\n    },\n    {\n        value: \'Paris\',\n        label: \'Paris\',\n    },\n    {\n        value: \'Canberra\',\n        label: \'Canberra\',\n    },\n]);\n\nconst model = ref(\'\');\n<\/script>\n',custom:'<template>\n    <ivue-select v-model="model" style="width:200px">\n        <ivue-option value="New York" label="New York">\n            <div class="select-custom">\n                <span>New York</span>\n                <span>America</span>\n            </div>\n        </ivue-option>\n        <ivue-option value="London" label="London">\n            <div class="select-custom">\n                <span>London</span>\n                <span>U.K.</span>\n            </div>\n        </ivue-option>\n        <ivue-option value="Sydney" label="Sydney">\n            <div class="select-custom">\n                <span>Sydney</span>\n                <span>Australian</span>\n            </div>\n        </ivue-option>\n    </ivue-select>\n</template>\n\n<script setup>\nimport { ref } from \'vue\';\n\nconst model = ref(\'\');\n<\/script>\n\n<style scoped>\n.select-custom {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n}\n</style>\n',multiple:"<template>\n    <ivue-select v-model=\"model\" multiple style=\"width:260px\">\n        <ivue-option v-for=\"item in cityList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</ivue-option>\n    </ivue-select>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst cityList = ref([\n    {\n        value: 'New York',\n        label: 'New York',\n    },\n    {\n        value: 'London',\n        label: 'London',\n    },\n    {\n        value: 'Sydney',\n        label: 'Sydney',\n    },\n    {\n        value: 'Ottawa',\n        label: 'Ottawa',\n    },\n    {\n        value: 'Paris',\n        label: 'Paris',\n    },\n    {\n        value: 'Canberra',\n        label: 'Canberra',\n    },\n]);\n\nconst model = ref([]);\n<\/script>\n",prefix:"<template>\n    <ivue-select v-model=\"model1\" prefix=\"catching_pokemon\" style=\"width:200px\">\n        <ivue-option v-for=\"item in cityList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</ivue-option>\n    </ivue-select>\n\n    <ivue-select class=\"select\" v-model=\"model2\" style=\"width:200px\">\n        <template #prefix>前缀图标</template>\n        <ivue-option v-for=\"item in cityList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</ivue-option>\n    </ivue-select>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst cityList = ref([\n    {\n        value: 'New York',\n        label: 'New York',\n    },\n    {\n        value: 'London',\n        label: 'London',\n    },\n    {\n        value: 'Sydney',\n        label: 'Sydney',\n    },\n    {\n        value: 'Ottawa',\n        label: 'Ottawa',\n    },\n    {\n        value: 'Paris',\n        label: 'Paris',\n    },\n    {\n        value: 'Canberra',\n        label: 'Canberra',\n    },\n]);\n\nconst model1 = ref('');\nconst model2 = ref('');\n<\/script>\n\n<style scoped>\n.select {\n    margin-left: 20px;\n}\n</style>\n",tag:"<template>\n    <h3>多选时最多显示多少个 tag</h3>\n    <ivue-select v-model=\"model1\" multiple :max-tag-count=\"2\" style=\"width:400px\">\n        <ivue-option v-for=\"item in cityList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</ivue-option>\n    </ivue-select>\n    <h3>隐藏 tag 时显示的内容，参数是剩余项数量</h3>\n    <ivue-select\n        v-model=\"model2\"\n        multiple\n        :max-tag-count=\"2\"\n        :max-tag-placeholder=\"maxTagPlaceholder\"\n        style=\"width:400px\"\n    >\n        <ivue-option v-for=\"item in cityList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</ivue-option>\n    </ivue-select>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst cityList = ref([\n    {\n        value: 'New York',\n        label: 'New York',\n    },\n    {\n        value: 'London',\n        label: 'London',\n    },\n    {\n        value: 'Sydney',\n        label: 'Sydney',\n    },\n    {\n        value: 'Ottawa',\n        label: 'Ottawa',\n    },\n    {\n        value: 'Paris',\n        label: 'Paris',\n    },\n    {\n        value: 'Canberra',\n        label: 'Canberra',\n    },\n]);\n\nconst model1 = ref([]);\nconst model2 = ref([]);\n\nconst maxTagPlaceholder = (num) => {\n    return `more ${num}`;\n};\n<\/script>\n",filterable:"<template>\n    <h3>单选</h3>\n    <ivue-select v-model=\"model1\" filterable style=\"width:400px\">\n        <ivue-option v-for=\"item in cityList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</ivue-option>\n    </ivue-select>\n    <h3>多选</h3>\n    <ivue-select v-model=\"model2\" filterable multiple style=\"width:400px\">\n        <ivue-option v-for=\"item in cityList\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</ivue-option>\n    </ivue-select>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst cityList = ref([\n    {\n        value: 'New York',\n        label: 'New York',\n    },\n    {\n        value: 'London',\n        label: 'London',\n    },\n    {\n        value: 'Sydney',\n        label: 'Sydney',\n    },\n    {\n        value: 'Ottawa',\n        label: 'Ottawa',\n    },\n    {\n        value: 'Paris',\n        label: 'Paris',\n    },\n    {\n        value: 'Canberra',\n        label: 'Canberra',\n    },\n]);\n\nconst model1 = ref('');\nconst model2 = ref([]);\n<\/script>\n",search:"<template>\n    <h3>单选</h3>\n    <ivue-select\n        v-model=\"model1\"\n        filterable\n        :search-method=\"searchMethod1\"\n        :loading=\"loading1\"\n        style=\"width:400px\"\n        ref=\"select1\"\n    >\n        <ivue-option\n            v-for=\"(option, index) in options1\"\n            :value=\"option.value\"\n            :key=\"index\"\n        >{{option.label}}</ivue-option>\n    </ivue-select>\n\n    <h3>多选</h3>\n    <ivue-select\n        v-model=\"model2\"\n        multiple\n        filterable\n        :search-method=\"searchMethod2\"\n        :loading=\"loading2\"\n        style=\"width:400px\"\n    >\n        <ivue-option\n            v-for=\"(option, index) in options2\"\n            :value=\"option.value\"\n            :key=\"index\"\n        >{{option.label}}</ivue-option>\n    </ivue-select>\n    <h3>开启多选过滤收起时清除输入</h3>\n    <ivue-select\n        v-model=\"model2\"\n        multiple\n        filterable\n        :search-method=\"searchMethod2\"\n        :loading=\"loading2\"\n        :multiple-filterable-clear=\"true\"\n        style=\"width:400px\"\n    >\n        <ivue-option\n            v-for=\"(option, index) in options2\"\n            :value=\"option.value\"\n            :key=\"index\"\n        >{{option.label}}</ivue-option>\n    </ivue-select>\n</template>\n\n<script setup>\nimport { ref, watch } from 'vue';\n\nconst model1 = ref('');\nconst loading1 = ref(false);\nconst options1 = ref([]);\n\nconst model2 = ref('');\nconst loading2 = ref(false);\nconst options2 = ref([]);\n\nconst list = ref([\n    'Alabama',\n    'Alaska',\n    'Arizona',\n    'Arkansas',\n    'California',\n    'Colorado',\n    'Connecticut',\n    'Delaware',\n    'Florida',\n    'Georgia',\n    'Hawaii',\n    'Idaho',\n    'Illinois',\n    'Indiana',\n    'Iowa',\n    'Kansas',\n    'Kentucky',\n    'Louisiana',\n    'Maine',\n    'Maryland',\n    'Massachusetts',\n    'Michigan',\n    'Minnesota',\n    'Mississippi',\n    'Missouri',\n    'Montana',\n    'Nebraska',\n    'Nevada',\n    'New hampshire',\n    'New jersey',\n    'New mexico',\n    'New york',\n    'North carolina',\n    'North dakota',\n    'Ohio',\n    'Oklahoma',\n    'Oregon',\n    'Pennsylvania',\n    'Rhode island',\n    'South carolina',\n    'South dakota',\n    'Tennessee',\n    'Texas',\n    'Utah',\n    'Vermont',\n    'Virginia',\n    'Washington',\n    'West virginia',\n    'Wisconsin',\n    'Wyoming',\n]);\n\nconst searchEnd = ref(false);\n\nconst searchMethod1 = (query) => {\n    if (query !== '') {\n        if (!searchEnd.value) {\n            loading1.value = true;\n        }\n\n        setTimeout(() => {\n            loading1.value = false;\n\n            const _list = list.value.map((item) => {\n                return {\n                    value: item,\n                    label: item,\n                };\n            });\n\n            options1.value = _list.filter(\n                (item) =>\n                    item.label.toLowerCase().indexOf(query.toLowerCase()) > -1\n            );\n        }, 2000);\n    } else {\n        options1.value = [];\n    }\n};\n\nconst searchMethod2 = (query) => {\n    const _list = list.value.map((item) => {\n        return {\n            value: item,\n            label: item,\n        };\n    });\n\n    if (query !== '') {\n        loading2.value = true;\n\n        setTimeout(() => {\n            loading2.value = false;\n\n            options2.value = _list.filter(\n                (item) =>\n                    item.label.toLowerCase().indexOf(query.toLowerCase()) > -1\n            );\n        }, 200);\n    } else {\n        options2.value = _list;\n    }\n};\n\nwatch(\n    () => model1.value,\n    () => {\n        searchEnd.value = true;\n\n        setTimeout(() => {\n            searchEnd.value = false;\n        });\n    }\n);\n<\/script>\n",defaultLabel:"<template>\n    <h3>单选</h3>\n    <ivue-select\n        v-model=\"model1\"\n        filterable\n        :search-method=\"searchMethod1\"\n        default-label=\"北京\"\n        :loading=\"loading1\"\n        @on-set-default-options=\"setDefaultOptions\"\n    >\n        <ivue-option\n            v-for=\"(option, index) in options1\"\n            :value=\"option.value\"\n            :key=\"index\"\n        >{{option.label}}</ivue-option>\n    </ivue-select>\n\n    <h3>多选</h3>\n    <ivue-select\n        v-model=\"model2\"\n        multiple\n        filterable\n        :search-method=\"searchMethod2\"\n        :default-label=\"['北京', '深圳']\"\n        :loading=\"loading2\"\n        @on-set-default-options=\"setDefaultOptions\"\n    >\n        <ivue-option\n            v-for=\"(option, index) in options2\"\n            :value=\"option.value\"\n            :key=\"index\"\n        >{{option.label}}</ivue-option>\n    </ivue-select>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst model1 = ref('beijing');\nconst options1 = ref([]);\nconst loading1 = ref(false);\n\nconst model2 = ref(['beijing', 'shenzhen']);\nconst options2 = ref([]);\nconst loading2 = ref(false);\n\nconst list = ref([\n    {\n        value: 'beijing',\n        label: '北京',\n    },\n    {\n        value: 'shanghai',\n        label: '上海',\n    },\n    {\n        value: 'shenzhen',\n        label: '深圳',\n    },\n    {\n        value: 'hangzhou',\n        label: '杭州',\n    },\n    {\n        value: 'guangzhou',\n        label: '广州',\n    },\n]);\n\nconst searchMethod1 = (query) => {\n    if (query !== '') {\n        loading1.value = true;\n\n        setTimeout(() => {\n            loading1.value = false;\n\n            options1.value = list.value.filter(\n                (item) => item.label.indexOf(query) > -1\n            );\n        }, 200);\n    } else {\n        options1.value = list.value;\n    }\n};\n\nconst searchMethod2 = (query) => {\n    if (query !== '') {\n        loading2.value = true;\n\n        setTimeout(() => {\n            loading2.value = false;\n\n            options2.value = list.value.filter(\n                (item) => item.label.indexOf(query) > -1\n            );\n        }, 200);\n    } else {\n        options2.value = list.value;\n    }\n};\n\nconst setDefaultOptions = (options) => {\n    options2.value = options;\n};\n<\/script>\n",allowCreate:"<template>\n    <h3>单选</h3>\n    <ivue-select v-model=\"model1\" filterable allow-create @on-create=\"handleCreate1\">\n        <ivue-option v-for=\"item in list1\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</ivue-option>\n    </ivue-select>\n\n    <h3>多选</h3>\n    <ivue-select v-model=\"model2\" filterable multiple allow-create @on-create=\"handleCreate2\">\n        <ivue-option v-for=\"item in list2\" :value=\"item.value\" :key=\"item.value\">{{ item.label }}</ivue-option>\n    </ivue-select>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst list1 = ref([\n    {\n        value: 'New York',\n        label: 'New York',\n    },\n    {\n        value: 'London',\n        label: 'London',\n    },\n    {\n        value: 'Sydney',\n        label: 'Sydney',\n    },\n    {\n        value: 'Ottawa',\n        label: 'Ottawa',\n    },\n    {\n        value: 'Paris',\n        label: 'Paris',\n    },\n    {\n        value: 'Canberra',\n        label: 'Canberra',\n    },\n]);\n\nconst list2 = ref([\n    {\n        value: 'New York',\n        label: 'New York',\n    },\n    {\n        value: 'London',\n        label: 'London',\n    },\n    {\n        value: 'Sydney',\n        label: 'Sydney',\n    },\n    {\n        value: 'Ottawa',\n        label: 'Ottawa',\n    },\n    {\n        value: 'Paris',\n        label: 'Paris',\n    },\n    {\n        value: 'Canberra',\n        label: 'Canberra',\n    },\n]);\n\nconst model1 = ref('');\nconst model2 = ref([]);\n\nconst handleCreate1 = (val) => {\n    list1.value.push({\n        value: val,\n        label: val,\n    });\n};\n\nconst handleCreate2 = (val) => {\n    list2.value.push({\n        value: val,\n        label: val,\n    });\n};\n<\/script>\n"};var o=n;const c=Object(a["createElementVNode"])("h3",null,"普通",-1),r=Object(a["createElementVNode"])("h3",null,"渐变颜色",-1);var u={__name:"default",setup(e){const t=Object(a["ref"])([{value:"New York",label:"New York"},{value:"London",label:"London"},{value:"Sydney",label:"Sydney"},{value:"Ottawa",label:"Ottawa"},{value:"Paris",label:"Paris"},{value:"Canberra",label:"Canberra"}]),l=Object(a["ref"])("");return(e,n)=>{const o=Object(a["resolveComponent"])("ivue-option"),u=Object(a["resolveComponent"])("ivue-select");return Object(a["openBlock"])(),Object(a["createElementBlock"])(a["Fragment"],null,[c,Object(a["createVNode"])(u,{modelValue:l.value,"onUpdate:modelValue":n[0]||(n[0]=e=>l.value=e),"selected-color":["#E91E63","#9C27B0"],"hover-color":["#673AB7","#2196F3"],style:{width:"200px"}},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(t.value,e=>(Object(a["openBlock"])(),Object(a["createBlock"])(o,{value:e.value,key:e.value},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue"]),r,Object(a["createVNode"])(u,{modelValue:l.value,"onUpdate:modelValue":n[1]||(n[1]=e=>l.value=e),"selected-color":["#E91E63","#9C27B0"],"hover-color":["#673AB7","#2196F3"],style:{width:"200px"}},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(t.value,e=>(Object(a["openBlock"])(),Object(a["createBlock"])(o,{value:e.value,key:e.value},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue"])],64)}}};const i=u;var d=i;const b=Object(a["createElementVNode"])("h3",null,"禁用禁用整个选择器",-1),v=Object(a["createElementVNode"])("h3",null,"禁用当前项",-1);var s={__name:"disabled",setup(e){const t=Object(a["ref"])([{value:"New York",label:"New York"},{value:"London",label:"London"},{value:"Sydney",label:"Sydney"},{value:"Ottawa",label:"Ottawa"},{value:"Paris",label:"Paris"},{value:"Canberra",label:"Canberra"}]),l=Object(a["ref"])(""),n=Object(a["ref"])("");return(e,o)=>{const c=Object(a["resolveComponent"])("ivue-option"),r=Object(a["resolveComponent"])("ivue-select");return Object(a["openBlock"])(),Object(a["createElementBlock"])(a["Fragment"],null,[b,Object(a["createVNode"])(r,{modelValue:l.value,"onUpdate:modelValue":o[0]||(o[0]=e=>l.value=e),disabled:"",style:{width:"200px"}},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(t.value,e=>(Object(a["openBlock"])(),Object(a["createBlock"])(c,{value:e.value,key:e.value},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue"]),v,Object(a["createVNode"])(r,{modelValue:n.value,"onUpdate:modelValue":o[1]||(o[1]=e=>n.value=e),style:{width:"200px"}},{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(c,{value:"beijing"},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])("New York")]),_:1}),Object(a["createVNode"])(c,{value:"shanghai",disabled:""},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])("London")]),_:1}),Object(a["createVNode"])(c,{value:"shenzhen"},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])("Sydney")]),_:1})]),_:1},8,["modelValue"])],64)}}};const p=s;var m=p,O={__name:"clearable",setup(e){const t=Object(a["ref"])([{value:"New York",label:"New York"},{value:"London",label:"London"},{value:"Sydney",label:"Sydney"},{value:"Ottawa",label:"Ottawa"},{value:"Paris",label:"Paris"},{value:"Canberra",label:"Canberra"}]),l=Object(a["ref"])("");return(e,n)=>{const o=Object(a["resolveComponent"])("ivue-option"),c=Object(a["resolveComponent"])("ivue-select");return Object(a["openBlock"])(),Object(a["createBlock"])(c,{modelValue:l.value,"onUpdate:modelValue":n[0]||(n[0]=e=>l.value=e),clearable:"",style:{width:"200px"}},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(t.value,e=>(Object(a["openBlock"])(),Object(a["createBlock"])(o,{value:e.value,key:e.value},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue"])}}};const j=O;var f=j;const h=Object(a["createElementVNode"])("h3",null,"普通分组",-1),y=Object(a["createElementVNode"])("h3",null,"普通分组 开启过滤",-1),V=Object(a["createElementVNode"])("h3",null,"分组开启过滤, 开启搜索时，隐藏其他 option-group 组件头",-1);var N={__name:"group",setup(e){const t=Object(a["ref"])([{value:"New York",label:"New York"},{value:"London",label:"London"},{value:"Sydney",label:"Sydney"}]),l=Object(a["ref"])([{value:"Ottawa",label:"Ottawa"},{value:"Paris",label:"Paris"},{value:"Canberra",label:"Canberra"}]),n=Object(a["ref"])("");return(e,o)=>{const c=Object(a["resolveComponent"])("ivue-option"),r=Object(a["resolveComponent"])("ivue-option-group"),u=Object(a["resolveComponent"])("ivue-select");return Object(a["openBlock"])(),Object(a["createElementBlock"])(a["Fragment"],null,[h,Object(a["createVNode"])(u,{modelValue:n.value,"onUpdate:modelValue":o[0]||(o[0]=e=>n.value=e),style:{width:"200px"}},{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(r,{label:"Hot Cities"},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(t.value,e=>(Object(a["openBlock"])(),Object(a["createBlock"])(c,{value:e.value,key:e.value},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1}),Object(a["createVNode"])(r,{label:"Other Cities"},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(l.value,e=>(Object(a["openBlock"])(),Object(a["createBlock"])(c,{value:e.value,key:e.value},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1})]),_:1},8,["modelValue"]),y,Object(a["createVNode"])(u,{modelValue:n.value,"onUpdate:modelValue":o[1]||(o[1]=e=>n.value=e),filterable:"",style:{width:"200px"}},{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(r,{label:"Hot Cities"},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(t.value,e=>(Object(a["openBlock"])(),Object(a["createBlock"])(c,{value:e.value,key:e.value},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1}),Object(a["createVNode"])(r,{label:"Other Cities"},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(l.value,e=>(Object(a["openBlock"])(),Object(a["createBlock"])(c,{value:e.value,key:e.value},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1})]),_:1},8,["modelValue"]),V,Object(a["createVNode"])(u,{modelValue:n.value,"onUpdate:modelValue":o[2]||(o[2]=e=>n.value=e),filterable:"","filterable-hidden-group":"",style:{width:"200px"}},{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(r,{label:"Hot Cities"},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(t.value,e=>(Object(a["openBlock"])(),Object(a["createBlock"])(c,{value:e.value,key:e.value},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1}),Object(a["createVNode"])(r,{label:"Other Cities"},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(l.value,e=>(Object(a["openBlock"])(),Object(a["createBlock"])(c,{value:e.value,key:e.value},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1})]),_:1},8,["modelValue"])],64)}}};const w=N;var k=w;const x=e=>(Object(a["pushScopeId"])("data-v-070e38d8"),e=e(),Object(a["popScopeId"])(),e),g=x(()=>Object(a["createElementVNode"])("div",{class:"select-custom"},[Object(a["createElementVNode"])("span",null,"New York"),Object(a["createElementVNode"])("span",null,"America")],-1)),C=x(()=>Object(a["createElementVNode"])("div",{class:"select-custom"},[Object(a["createElementVNode"])("span",null,"London"),Object(a["createElementVNode"])("span",null,"U.K.")],-1)),B=x(()=>Object(a["createElementVNode"])("div",{class:"select-custom"},[Object(a["createElementVNode"])("span",null,"Sydney"),Object(a["createElementVNode"])("span",null,"Australian")],-1));var E={__name:"custom",setup(e){const t=Object(a["ref"])("");return(e,l)=>{const n=Object(a["resolveComponent"])("ivue-option"),o=Object(a["resolveComponent"])("ivue-select");return Object(a["openBlock"])(),Object(a["createBlock"])(o,{modelValue:t.value,"onUpdate:modelValue":l[0]||(l[0]=e=>t.value=e),style:{width:"200px"}},{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(n,{value:"New York",label:"New York"},{default:Object(a["withCtx"])(()=>[g]),_:1}),Object(a["createVNode"])(n,{value:"London",label:"London"},{default:Object(a["withCtx"])(()=>[C]),_:1}),Object(a["createVNode"])(n,{value:"Sydney",label:"Sydney"},{default:Object(a["withCtx"])(()=>[B]),_:1})]),_:1},8,["modelValue"])}}},L=(l("9b99"),l("6b0d")),_=l.n(L);const S=_()(E,[["__scopeId","data-v-070e38d8"]]);var T=S,P={__name:"multiple",setup(e){const t=Object(a["ref"])([{value:"New York",label:"New York"},{value:"London",label:"London"},{value:"Sydney",label:"Sydney"},{value:"Ottawa",label:"Ottawa"},{value:"Paris",label:"Paris"},{value:"Canberra",label:"Canberra"}]),l=Object(a["ref"])([]);return(e,n)=>{const o=Object(a["resolveComponent"])("ivue-option"),c=Object(a["resolveComponent"])("ivue-select");return Object(a["openBlock"])(),Object(a["createBlock"])(c,{modelValue:l.value,"onUpdate:modelValue":n[0]||(n[0]=e=>l.value=e),multiple:"",style:{width:"260px"}},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(t.value,e=>(Object(a["openBlock"])(),Object(a["createBlock"])(o,{value:e.value,key:e.value},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue"])}}};const Y=P;var F=Y,M={__name:"prefix",setup(e){const t=Object(a["ref"])([{value:"New York",label:"New York"},{value:"London",label:"London"},{value:"Sydney",label:"Sydney"},{value:"Ottawa",label:"Ottawa"},{value:"Paris",label:"Paris"},{value:"Canberra",label:"Canberra"}]),l=Object(a["ref"])(""),n=Object(a["ref"])("");return(e,o)=>{const c=Object(a["resolveComponent"])("ivue-option"),r=Object(a["resolveComponent"])("ivue-select");return Object(a["openBlock"])(),Object(a["createElementBlock"])(a["Fragment"],null,[Object(a["createVNode"])(r,{modelValue:l.value,"onUpdate:modelValue":o[0]||(o[0]=e=>l.value=e),prefix:"catching_pokemon",style:{width:"200px"}},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(t.value,e=>(Object(a["openBlock"])(),Object(a["createBlock"])(c,{value:e.value,key:e.value},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue"]),Object(a["createVNode"])(r,{class:"select",modelValue:n.value,"onUpdate:modelValue":o[1]||(o[1]=e=>n.value=e),style:{width:"200px"}},{prefix:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])("前缀图标")]),default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(t.value,e=>(Object(a["openBlock"])(),Object(a["createBlock"])(c,{value:e.value,key:e.value},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue"])],64)}}};l("c047");const D=_()(M,[["__scopeId","data-v-059f7f60"]]);var U=D;const A=Object(a["createElementVNode"])("h3",null,"多选时最多显示多少个 tag",-1),H=Object(a["createElementVNode"])("h3",null,"隐藏 tag 时显示的内容，参数是剩余项数量",-1);var q={__name:"tag",setup(e){const t=Object(a["ref"])([{value:"New York",label:"New York"},{value:"London",label:"London"},{value:"Sydney",label:"Sydney"},{value:"Ottawa",label:"Ottawa"},{value:"Paris",label:"Paris"},{value:"Canberra",label:"Canberra"}]),l=Object(a["ref"])([]),n=Object(a["ref"])([]),o=e=>"more "+e;return(e,c)=>{const r=Object(a["resolveComponent"])("ivue-option"),u=Object(a["resolveComponent"])("ivue-select");return Object(a["openBlock"])(),Object(a["createElementBlock"])(a["Fragment"],null,[A,Object(a["createVNode"])(u,{modelValue:l.value,"onUpdate:modelValue":c[0]||(c[0]=e=>l.value=e),multiple:"","max-tag-count":2,style:{width:"400px"}},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(t.value,e=>(Object(a["openBlock"])(),Object(a["createBlock"])(r,{value:e.value,key:e.value},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue"]),H,Object(a["createVNode"])(u,{modelValue:n.value,"onUpdate:modelValue":c[1]||(c[1]=e=>n.value=e),multiple:"","max-tag-count":2,"max-tag-placeholder":o,style:{width:"400px"}},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(t.value,e=>(Object(a["openBlock"])(),Object(a["createBlock"])(r,{value:e.value,key:e.value},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue"])],64)}}};const I=q;var z=I;const W=Object(a["createElementVNode"])("h3",null,"单选",-1),K=Object(a["createElementVNode"])("h3",null,"多选",-1);var G={__name:"filterable",setup(e){const t=Object(a["ref"])([{value:"New York",label:"New York"},{value:"London",label:"London"},{value:"Sydney",label:"Sydney"},{value:"Ottawa",label:"Ottawa"},{value:"Paris",label:"Paris"},{value:"Canberra",label:"Canberra"}]),l=Object(a["ref"])(""),n=Object(a["ref"])([]);return(e,o)=>{const c=Object(a["resolveComponent"])("ivue-option"),r=Object(a["resolveComponent"])("ivue-select");return Object(a["openBlock"])(),Object(a["createElementBlock"])(a["Fragment"],null,[W,Object(a["createVNode"])(r,{modelValue:l.value,"onUpdate:modelValue":o[0]||(o[0]=e=>l.value=e),filterable:"",style:{width:"400px"}},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(t.value,e=>(Object(a["openBlock"])(),Object(a["createBlock"])(c,{value:e.value,key:e.value},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue"]),K,Object(a["createVNode"])(r,{modelValue:n.value,"onUpdate:modelValue":o[1]||(o[1]=e=>n.value=e),filterable:"",multiple:"",style:{width:"400px"}},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(t.value,e=>(Object(a["openBlock"])(),Object(a["createBlock"])(c,{value:e.value,key:e.value},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue"])],64)}}};const J=G;var Q=J;const R=Object(a["createElementVNode"])("h3",null,"单选",-1),$=Object(a["createElementVNode"])("h3",null,"多选",-1),X=Object(a["createElementVNode"])("h3",null,"开启多选过滤收起时清除输入",-1);var Z={__name:"search",setup(e){const t=Object(a["ref"])(""),l=Object(a["ref"])(!1),n=Object(a["ref"])([]),o=Object(a["ref"])(""),c=Object(a["ref"])(!1),r=Object(a["ref"])([]),u=Object(a["ref"])(["Alabama","Alaska","Arizona","Arkansas","California","Colorado","Connecticut","Delaware","Florida","Georgia","Hawaii","Idaho","Illinois","Indiana","Iowa","Kansas","Kentucky","Louisiana","Maine","Maryland","Massachusetts","Michigan","Minnesota","Mississippi","Missouri","Montana","Nebraska","Nevada","New hampshire","New jersey","New mexico","New york","North carolina","North dakota","Ohio","Oklahoma","Oregon","Pennsylvania","Rhode island","South carolina","South dakota","Tennessee","Texas","Utah","Vermont","Virginia","Washington","West virginia","Wisconsin","Wyoming"]),i=Object(a["ref"])(!1),d=e=>{""!==e?(i.value||(l.value=!0),setTimeout(()=>{l.value=!1;const t=u.value.map(e=>({value:e,label:e}));n.value=t.filter(t=>t.label.toLowerCase().indexOf(e.toLowerCase())>-1)},2e3)):n.value=[]},b=e=>{const t=u.value.map(e=>({value:e,label:e}));""!==e?(c.value=!0,setTimeout(()=>{c.value=!1,r.value=t.filter(t=>t.label.toLowerCase().indexOf(e.toLowerCase())>-1)},200)):r.value=t};return Object(a["watch"])(()=>t.value,()=>{i.value=!0,setTimeout(()=>{i.value=!1})}),(e,u)=>{const i=Object(a["resolveComponent"])("ivue-option"),v=Object(a["resolveComponent"])("ivue-select");return Object(a["openBlock"])(),Object(a["createElementBlock"])(a["Fragment"],null,[R,Object(a["createVNode"])(v,{modelValue:t.value,"onUpdate:modelValue":u[0]||(u[0]=e=>t.value=e),filterable:"","search-method":d,loading:l.value,style:{width:"400px"},ref:"select1"},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(n.value,(e,t)=>(Object(a["openBlock"])(),Object(a["createBlock"])(i,{value:e.value,key:t},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue","loading"]),$,Object(a["createVNode"])(v,{modelValue:o.value,"onUpdate:modelValue":u[1]||(u[1]=e=>o.value=e),multiple:"",filterable:"","search-method":b,loading:c.value,style:{width:"400px"}},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(r.value,(e,t)=>(Object(a["openBlock"])(),Object(a["createBlock"])(i,{value:e.value,key:t},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue","loading"]),X,Object(a["createVNode"])(v,{modelValue:o.value,"onUpdate:modelValue":u[2]||(u[2]=e=>o.value=e),multiple:"",filterable:"","search-method":b,loading:c.value,"multiple-filterable-clear":!0,style:{width:"400px"}},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(r.value,(e,t)=>(Object(a["openBlock"])(),Object(a["createBlock"])(i,{value:e.value,key:t},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue","loading"])],64)}}};const ee=Z;var te=ee;const le=Object(a["createElementVNode"])("h3",null,"单选",-1),ae=Object(a["createElementVNode"])("h3",null,"多选",-1);var ne={__name:"default-label",setup(e){const t=Object(a["ref"])("beijing"),l=Object(a["ref"])([]),n=Object(a["ref"])(!1),o=Object(a["ref"])(["beijing","shenzhen"]),c=Object(a["ref"])([]),r=Object(a["ref"])(!1),u=Object(a["ref"])([{value:"beijing",label:"北京"},{value:"shanghai",label:"上海"},{value:"shenzhen",label:"深圳"},{value:"hangzhou",label:"杭州"},{value:"guangzhou",label:"广州"}]),i=e=>{""!==e?(n.value=!0,setTimeout(()=>{n.value=!1,l.value=u.value.filter(t=>t.label.indexOf(e)>-1)},200)):l.value=u.value},d=e=>{""!==e?(r.value=!0,setTimeout(()=>{r.value=!1,c.value=u.value.filter(t=>t.label.indexOf(e)>-1)},200)):c.value=u.value},b=e=>{c.value=e};return(e,u)=>{const v=Object(a["resolveComponent"])("ivue-option"),s=Object(a["resolveComponent"])("ivue-select");return Object(a["openBlock"])(),Object(a["createElementBlock"])(a["Fragment"],null,[le,Object(a["createVNode"])(s,{modelValue:t.value,"onUpdate:modelValue":u[0]||(u[0]=e=>t.value=e),filterable:"","search-method":i,"default-label":"北京",loading:n.value,onOnSetDefaultOptions:b},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(l.value,(e,t)=>(Object(a["openBlock"])(),Object(a["createBlock"])(v,{value:e.value,key:t},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue","loading"]),ae,Object(a["createVNode"])(s,{modelValue:o.value,"onUpdate:modelValue":u[1]||(u[1]=e=>o.value=e),multiple:"",filterable:"","search-method":d,"default-label":["北京","深圳"],loading:r.value,onOnSetDefaultOptions:b},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(c.value,(e,t)=>(Object(a["openBlock"])(),Object(a["createBlock"])(v,{value:e.value,key:t},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue","loading"])],64)}}};const oe=ne;var ce=oe;l("14d9");const re=Object(a["createElementVNode"])("h3",null,"单选",-1),ue=Object(a["createElementVNode"])("h3",null,"多选",-1);var ie={__name:"allow-create",setup(e){const t=Object(a["ref"])([{value:"New York",label:"New York"},{value:"London",label:"London"},{value:"Sydney",label:"Sydney"},{value:"Ottawa",label:"Ottawa"},{value:"Paris",label:"Paris"},{value:"Canberra",label:"Canberra"}]),l=Object(a["ref"])([{value:"New York",label:"New York"},{value:"London",label:"London"},{value:"Sydney",label:"Sydney"},{value:"Ottawa",label:"Ottawa"},{value:"Paris",label:"Paris"},{value:"Canberra",label:"Canberra"}]),n=Object(a["ref"])(""),o=Object(a["ref"])([]),c=e=>{t.value.push({value:e,label:e})},r=e=>{l.value.push({value:e,label:e})};return(e,u)=>{const i=Object(a["resolveComponent"])("ivue-option"),d=Object(a["resolveComponent"])("ivue-select");return Object(a["openBlock"])(),Object(a["createElementBlock"])(a["Fragment"],null,[re,Object(a["createVNode"])(d,{modelValue:n.value,"onUpdate:modelValue":u[0]||(u[0]=e=>n.value=e),filterable:"","allow-create":"",onOnCreate:c},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(t.value,e=>(Object(a["openBlock"])(),Object(a["createBlock"])(i,{value:e.value,key:e.value},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue"]),ue,Object(a["createVNode"])(d,{modelValue:o.value,"onUpdate:modelValue":u[1]||(u[1]=e=>o.value=e),filterable:"",multiple:"","allow-create":"",onOnCreate:r},{default:Object(a["withCtx"])(()=>[(Object(a["openBlock"])(!0),Object(a["createElementBlock"])(a["Fragment"],null,Object(a["renderList"])(l.value,e=>(Object(a["openBlock"])(),Object(a["createBlock"])(i,{value:e.value,key:e.value},{default:Object(a["withCtx"])(()=>[Object(a["createTextVNode"])(Object(a["toDisplayString"])(e.label),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue"])],64)}}};const de=ie;var be=de;const ve=Object(a["createStaticVNode"])("<h1>Select 选择器</h1><p>使用模拟的增强下拉选择器来代替浏览器原生的选择器。</p><p>选择器支持单选、多选、搜索，以及键盘快捷操作</p><h2>基础用法</h2><p> 基本用法。可以使用 <code>v-model</code> 双向绑定数据。 单选时, <code>value</code> 只接受字符串和数字类型，多选时，只接受数组类型，组件会自动根据 <code>ivue-option</code>的 <code>value</code>来返回选中的数据。 在展开选择器后，可以使用键盘的 <code>up</code>和 <code>down</code>快速上下选择，按下 <code>Enter</code>选择，按下 <code>Esc</code>收起选择器。 </p>",5),se=Object(a["createElementVNode"])("h2",null,"禁用",-1),pe=Object(a["createElementVNode"])("p",null,[Object(a["createTextVNode"])(" 通过给 "),Object(a["createElementVNode"])("code",null,"ivue-select"),Object(a["createTextVNode"])("设置属性 "),Object(a["createElementVNode"])("code",null,"disabled"),Object(a["createTextVNode"])("禁用整个选择器 ")],-1),me=Object(a["createElementVNode"])("p",null,[Object(a["createTextVNode"])(" 通过给 "),Object(a["createElementVNode"])("code",null,"ivue-option"),Object(a["createTextVNode"])("设置属性 "),Object(a["createElementVNode"])("code",null,"disabled"),Object(a["createTextVNode"])("可以禁用当前项 ")],-1),Oe=Object(a["createElementVNode"])("h2",null,"可清空",-1),je=Object(a["createElementVNode"])("p",null,[Object(a["createTextVNode"])(" 通过设置属性 "),Object(a["createElementVNode"])("code",null,"clearable"),Object(a["createTextVNode"])("可以清空已选项，仅适用于单选模式 ")],-1),fe=Object(a["createElementVNode"])("h2",null,"分组",-1),he=Object(a["createElementVNode"])("p",null,[Object(a["createTextVNode"])(" 使用 "),Object(a["createElementVNode"])("code",null,"ivue-option-group"),Object(a["createTextVNode"])("可将选项进行分组 ")],-1),ye=Object(a["createStaticVNode"])("<h2>自定义模板</h2><p> 对选项内容可以进行自定义。注意在 <code>ivue-option</code> 中使用 <code>label</code>属性，可以让选择器优先读取该属性的值以显示，否则选中时显示的内容会和自定义的一样，这往往不是我们想要的 </p><p> 对于选项显示内容的逻辑：优先显示 <code>slot</code> 内容，如果没有定义 <code>slot</code>，则显示 <code>label</code>的值 </p>",3),Ve=Object(a["createElementVNode"])("h2",null,"多选",-1),Ne=Object(a["createElementVNode"])("p",null,[Object(a["createTextVNode"])(" 通过设置属性 "),Object(a["createElementVNode"])("code",null,"multiple"),Object(a["createTextVNode"])("可以开启多选模式。多选模式下， "),Object(a["createElementVNode"])("code",null,"value"),Object(a["createTextVNode"])(" 接受数组类型的数据，所返回的也是数组 ")],-1),we=Object(a["createElementVNode"])("h2",null,"前缀图标",-1),ke=Object(a["createElementVNode"])("p",null,[Object(a["createTextVNode"])(" 设置 "),Object(a["createElementVNode"])("code",null,"prefix"),Object(a["createTextVNode"])(" 属性或 "),Object(a["createElementVNode"])("code",null,"slot"),Object(a["createTextVNode"])(" 可以在 "),Object(a["createElementVNode"])("code",null,"ivue-select"),Object(a["createTextVNode"])(" 内显示前缀图标 ")],-1),xe=Object(a["createElementVNode"])("h2",null,"标签集合",-1),ge=Object(a["createElementVNode"])("p",null,[Object(a["createTextVNode"])(" 设置属性 "),Object(a["createElementVNode"])("code",null,"max-tag-count"),Object(a["createTextVNode"])(" 可指定最多显示的 "),Object(a["createElementVNode"])("code",null,"tag"),Object(a["createTextVNode"])(" 数量，超出后折叠 ")],-1),Ce=Object(a["createElementVNode"])("p",null,[Object(a["createTextVNode"])(" 设置属性 "),Object(a["createElementVNode"])("code",null,"max-tag-placeholder"),Object(a["createTextVNode"])(" 可以自定义 "),Object(a["createElementVNode"])("code",null,"tag"),Object(a["createTextVNode"])(" 超出后折叠的显示内容 ")],-1),Be=Object(a["createElementVNode"])("h2",null,"可搜索",-1),Ee=Object(a["createStaticVNode"])("<h2>远程搜索</h2><p> 远程搜索需同时设置 <code>filterable</code>、 <code>search-method</code>、 <code>loading</code> 三个 props，其中 <code>loading</code> 用于控制是否正在搜索中， <code>search-method</code> 是远程搜索的方法。 </p><p> 还可以通过设置 <code>multiple-filterable-clear</code> 开启多选过滤收起时清除输入 </p><p> 注意：需要给 <code>ivue-option</code> 设置 <code>key</code></p>",4),Le=Object(a["createElementVNode"])("h2",null,"远程搜索默认值",-1),_e=Object(a["createElementVNode"])("p",null,[Object(a["createTextVNode"])(" 通过属性 "),Object(a["createElementVNode"])("code",null,"default-label"),Object(a["createTextVNode"])(" 及事件 "),Object(a["createElementVNode"])("code",null,"@on-set-default-options（仅用于 multiple 模式）"),Object(a["createTextVNode"])("，可以为远程搜索设置默认的 "),Object(a["createElementVNode"])("code",null,"label")],-1),Se=Object(a["createElementVNode"])("h2",null,"创建条目",-1),Te=Object(a["createElementVNode"])("p",null,[Object(a["createTextVNode"])(" 在 "),Object(a["createElementVNode"])("code",null,"filterable"),Object(a["createTextVNode"])(" 模式下，开启属性 "),Object(a["createElementVNode"])("code",null,"allow-create"),Object(a["createTextVNode"])("可以通过在输入框中输入文字来创建新的条目 ")],-1),Pe=Object(a["createElementVNode"])("p",null,[Object(a["createTextVNode"])(" 输入新条目后，按下回车键即可新建条目。 需配合 "),Object(a["createElementVNode"])("code",null,"@on-create"),Object(a["createTextVNode"])(" 事件使用 ")],-1),Ye=Object(a["createElementVNode"])("h2",null,"API",-1),Fe=Object(a["createElementVNode"])("h3",null,"Select Props",-1),Me=["innerHTML"],De=["innerHTML"],Ue=Object(a["createElementVNode"])("h3",null,"Select Events",-1),Ae=["innerHTML"],He=Object(a["createElementVNode"])("h3",null,"Select Methods",-1),qe=["innerHTML"],Ie=Object(a["createElementVNode"])("h3",null,"Select Slots",-1),ze=Object(a["createElementVNode"])("h3",null,"Option Props",-1),We=["innerHTML"],Ke=Object(a["createElementVNode"])("h3",null,"OptionGroup Props",-1),Ge=["innerHTML"];var Je={__name:"index",setup(e){const t=Object(a["ref"])(o),l=Object(a["ref"])([{name:"model-value",illustrate:"指定选中项目的 <code>value</code> 值，可以使用 <code>v-model</code> 双向绑定数据。单选时只接受 <code>String</code> 或 <code>Number</code>，多选时只接受 <code>String | Number | Array</code>",type:"String",value:"-",default:"-"},{name:"placeholder",illustrate:"选择框默认文字",type:"String",value:"-",default:"请选择"},{name:"clearable",illustrate:"是否可以清空选项，只在单选时有效",type:"Boolean",value:"-",default:"false"},{name:"reset-select-icon",illustrate:"清除选择图标",type:"Boolean",value:"-",default:"cancel"},{name:"multiple",illustrate:"是否支持多选",type:"Boolean",value:"-",default:"false"},{name:"multiple-filterable-clear",illustrate:"是否开启多选过滤收起时清除输入",type:"Boolean",value:"-",default:"false"},{name:"multiple-icon",illustrate:"设置多选删除图标",type:"String",value:"-",default:"cancel"},{name:"disabled",illustrate:"是否禁用",type:"Boolean",value:"-",default:"false"},{name:"filterable",illustrate:"是否支持过滤",type:"Boolean",value:"-",default:"false"},{name:"filter-query-prop",illustrate:"过滤输入预设值，注意需开启<code>filterable</code>",type:"String",value:"-",default:"-"},{name:"label-and-value",illustrate:"<code>@on-change</code>在返回选项时，是否将 <code>label</code> 和 <code>value</code> 一并返回，默认只返回 <code>value</code>",type:"Boolean",value:"-",default:"false"},{name:"default-label",illustrate:"远程搜索时，显示默认 <code>label</code>，详见示例",type:"String | Number | Array",value:"-",default:"-"},{name:"prefix",illustrate:"在 <code>Select</code> 内显示图标",type:"String",value:"-",default:"-"},{name:"max-tag-count",illustrate:"多选时最多显示多少个 <code>tag</code>",type:"Number",value:"-",default:"-"},{name:"max-tag-placeholder",illustrate:"隐藏 <code>tag</code> 时显示的内容，参数是剩余项数量",type:"Function",value:"-",default:"-"},{name:"allow-create",illustrate:"是否允许用户创建新条目，需开启 <code>filterable</code>",type:"Boolean",value:"-",default:"false"},{name:"allow-create-icon",illustrate:"创建新条目确认按钮图标",type:"String",value:"-",default:"reply"},{name:"not-find-text",illustrate:"没有找到数据时的提示",type:"String",value:"-",default:"无匹配数据"},{name:"search-method",illustrate:"搜索方法",type:"Function",value:"-",default:"-"},{name:"selected-color",illustrate:"选择选项时的颜色",type:"String | Array",value:"-",default:"#5B8EFF"},{name:"hover-color",illustrate:"<code>hover</code> 选择选项时的颜色",type:"String | Array",value:"-",default:"#5B8EFF"},{name:"capture",illustrate:"是否开启 <code>capture</code> 模式，也可通过全局配置",type:"Boolean",value:"-",default:"true"},{name:"arrow-down-icon",illustrate:"下拉图标",type:"String",value:"-",default:"keyboard_arrow_down"},{name:"filterable-hidden-group",illustrate:"开启搜索时，隐藏 <code>option-group</code> 组件头,开启<code>filterable</code>有效",type:"Boolean",value:"-",default:"false"},{name:"loading",illustrate:"开启加载中",type:"Boolean",value:"-",default:"false"},{name:"loading-text",illustrate:"加载中的文字提示",type:"String",value:"-",default:"加载中"},{name:"filter-by-label",illustrate:"在搜索时，是否只按照 label 进行搜索,注意:<code>option</code>必须设置了<code>label</code>选项",type:"Boolean",value:"-",default:"false"},{name:"restore-input-option",illustrate:"是否开启失去焦点还原输入框内容（仅在单选而且开启了过滤时生效）",type:"Boolean",value:"-",default:"true"},{name:"transfer",illustrate:"是否将弹层放置于 <code>body</code> 内，它将不受父级样式影响，从而达到更好的效果",type:"Boolean",value:"-",default:"false"},{name:"placement",illustrate:"弹窗的展开方向",type:"String",value:"<code>top</code> | <code>top-start</code> | <code>top-end</code> | <code>bottom</code> | <code>bottom-start</code> | <code>bottom-end</code>",default:"bottom-start"},{name:"transfer-class-name",illustrate:"开启 <code>transfer</code> 时，给浮层添加额外的 <code>class</code> 名称",type:"String",value:"-",default:"-"}]),n=Object(a["ref"])([{name:"on-change",illustrate:"选中的 <code>Option</code> 变化时触发，默认返回 <code>value</code>，如需返回 <code>label</code>，详见 <code>label-and-value</code> 属性",value:"当前选中项"},{name:"on-clear",illustrate:"点击清空按钮时触发",value:"-"},{name:"on-menu-open",illustrate:"下拉框展开或收起时触发",value:"true/false"},{name:"on-filter-query-change",illustrate:"过滤搜索改变时触发",value:"filterQuery"},{name:"on-set-default-options",illustrate:"远程搜索时，显示默认 <code>label</code>, 配合 <code>default-label</code> 使用，详见示例",value:"options"},{name:"on-create",illustrate:"新建条目时触发",value:"query"},{name:"on-select",illustrate:"选择项目时触发",value:"当前选中项"}]),c=Object(a["ref"])([{name:"setQuery",illustrate:'设置搜索词，如果传空则清空，仅在 <code>filterable="true"</code>时有效',value:"query"},{name:"clearSingleSelect",illustrate:"清空单选项,设置<code>clearable</code>将清除所有状态，未设置只清除 <code>value</code>的值",value:"-"},{name:"focus",illustrate:"聚焦,开启<code>filterable</code>时有效",value:"-"}]),r=Object(a["ref"])([{name:"prefix",illustrate:"自定义 <code>Select</code> 内头部图标"}]),u=Object(a["ref"])([{name:"ripple",illustrate:"是否开启水波纹效果",type:"Boolean",default:"false"},{name:"disabled",illustrate:"是否禁用选项",type:"Boolean",default:"false"},{name:"selected",illustrate:"是否选择当前项",type:"Boolean",default:"false"},{name:"is-focused",illustrate:"是否获取到焦点",type:"Boolean",default:"false"},{name:"label",illustrate:"选项显示的内容，默认会读取 <code>slot</code>，无 <code>slot</code> 时，优先读取该 <code>label</code> 值，无 <code>label</code> 时，读取 <code>value</code>。当选中时，选择器会显示 <code>label</code> 为已选文案。大部分情况不需要配置此项，直接写入 <code>slot</code> 即可，在自定义选项时，该属性非常有用。",type:"String | Number",default:"-"},{name:"value",illustrate:"选项值，默认根据此属性值进行筛选，必填",type:"String | Number",default:"-"}]),i=Object(a["ref"])([{name:"label",illustrate:"分组的组名",type:"String",default:"-"},{name:"disabled",illustrate:"是否禁用当前组",type:"Boolean",default:"false"}]);return(e,o)=>{const b=Object(a["resolveComponent"])("doc-markdown"),v=Object(a["resolveComponent"])("ivue-table-column"),s=Object(a["resolveComponent"])("ivue-table");return Object(a["openBlock"])(),Object(a["createElementBlock"])("div",null,[ve,Object(a["createVNode"])(b,{code:t.value.default},{demo:Object(a["withCtx"])(()=>[Object(a["createVNode"])(d)]),_:1},8,["code"]),se,pe,me,Object(a["createVNode"])(b,{code:t.value.disabled},{demo:Object(a["withCtx"])(()=>[Object(a["createVNode"])(m)]),_:1},8,["code"]),Oe,je,Object(a["createVNode"])(b,{code:t.value.clearable},{demo:Object(a["withCtx"])(()=>[Object(a["createVNode"])(f)]),_:1},8,["code"]),fe,he,Object(a["createVNode"])(b,{code:t.value.group},{demo:Object(a["withCtx"])(()=>[Object(a["createVNode"])(k)]),_:1},8,["code"]),ye,Object(a["createVNode"])(b,{code:t.value.custom},{demo:Object(a["withCtx"])(()=>[Object(a["createVNode"])(T)]),_:1},8,["code"]),Ve,Ne,Object(a["createVNode"])(b,{code:t.value.multiple},{demo:Object(a["withCtx"])(()=>[Object(a["createVNode"])(F)]),_:1},8,["code"]),we,ke,Object(a["createVNode"])(b,{code:t.value.prefix},{demo:Object(a["withCtx"])(()=>[Object(a["createVNode"])(U)]),_:1},8,["code"]),xe,ge,Ce,Object(a["createVNode"])(b,{code:t.value.tag},{demo:Object(a["withCtx"])(()=>[Object(a["createVNode"])(z)]),_:1},8,["code"]),Be,Object(a["createVNode"])(b,{code:t.value.filterable},{demo:Object(a["withCtx"])(()=>[Object(a["createVNode"])(Q)]),_:1},8,["code"]),Ee,Object(a["createVNode"])(b,{code:t.value.search},{demo:Object(a["withCtx"])(()=>[Object(a["createVNode"])(te)]),_:1},8,["code"]),Le,_e,Object(a["createVNode"])(b,{code:t.value.defaultLabel},{demo:Object(a["withCtx"])(()=>[Object(a["createVNode"])(ce)]),_:1},8,["code"]),Se,Te,Pe,Object(a["createVNode"])(b,{code:t.value.allowCreate},{demo:Object(a["withCtx"])(()=>[Object(a["createVNode"])(be)]),_:1},8,["code"]),Ye,Fe,Object(a["createVNode"])(s,{data:l.value,border:""},{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(v,{prop:"name",label:"名称",width:"200"}),Object(a["createVNode"])(v,{prop:"illustrate",label:"说明","min-width":"300"},{default:Object(a["withCtx"])(e=>[Object(a["createElementVNode"])("p",{innerHTML:e.row.illustrate},null,8,Me)]),_:1}),Object(a["createVNode"])(v,{prop:"type",label:"类型",width:"200"}),Object(a["createVNode"])(v,{prop:"value",label:"可选值",width:"200"},{default:Object(a["withCtx"])(e=>[Object(a["createElementVNode"])("p",{innerHTML:e.row.value},null,8,De)]),_:1}),Object(a["createVNode"])(v,{prop:"default",label:"默认",width:"200"})]),_:1},8,["data"]),Ue,Object(a["createVNode"])(s,{data:n.value,border:""},{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(v,{prop:"name",label:"名称",width:"200"}),Object(a["createVNode"])(v,{prop:"illustrate",label:"说明","min-width":"300"},{default:Object(a["withCtx"])(e=>[Object(a["createElementVNode"])("p",{innerHTML:e.row.illustrate},null,8,Ae)]),_:1}),Object(a["createVNode"])(v,{prop:"value",label:"返回值",width:"100"})]),_:1},8,["data"]),He,Object(a["createVNode"])(s,{data:c.value,border:""},{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(v,{prop:"name",label:"名称",width:"150"}),Object(a["createVNode"])(v,{prop:"illustrate",label:"说明","min-width":"300"},{default:Object(a["withCtx"])(e=>[Object(a["createElementVNode"])("p",{innerHTML:e.row.illustrate},null,8,qe)]),_:1}),Object(a["createVNode"])(v,{prop:"value",label:"参数",width:"100"})]),_:1},8,["data"]),Ie,Object(a["createVNode"])(s,{data:r.value,border:""},{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(v,{prop:"name",label:"名称",width:"200"}),Object(a["createVNode"])(v,{prop:"illustrate",label:"说明","min-width":"300"})]),_:1},8,["data"]),ze,Object(a["createVNode"])(s,{data:u.value,border:""},{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(v,{prop:"name",label:"名称",width:"100"}),Object(a["createVNode"])(v,{prop:"illustrate",label:"说明","min-width":"300"},{default:Object(a["withCtx"])(e=>[Object(a["createElementVNode"])("p",{innerHTML:e.row.illustrate},null,8,We)]),_:1}),Object(a["createVNode"])(v,{prop:"type",label:"类型",width:"100"}),Object(a["createVNode"])(v,{prop:"default",label:"默认",width:"100"})]),_:1},8,["data"]),Ke,Object(a["createVNode"])(s,{data:i.value,border:""},{default:Object(a["withCtx"])(()=>[Object(a["createVNode"])(v,{prop:"name",label:"名称",width:"100"}),Object(a["createVNode"])(v,{prop:"illustrate",label:"说明","min-width":"300"},{default:Object(a["withCtx"])(e=>[Object(a["createElementVNode"])("p",{innerHTML:e.row.illustrate},null,8,Ge)]),_:1}),Object(a["createVNode"])(v,{prop:"type",label:"类型",width:"100"}),Object(a["createVNode"])(v,{prop:"default",label:"默认",width:"100"})]),_:1},8,["data"])])}}};const Qe=Je;t["default"]=Qe},"9b99":function(e,t,l){"use strict";l("cb1a")},c047:function(e,t,l){"use strict";l("ff81")},cb1a:function(e,t,l){},e8b5:function(e,t,l){var a=l("c6b6");e.exports=Array.isArray||function(e){return"Array"==a(e)}},ff81:function(e,t,l){}}]);
//# sourceMappingURL=chunk-07d71fda.520a142c.js.map