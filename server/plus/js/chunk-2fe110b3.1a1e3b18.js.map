{"version":3,"sources":["webpack:///./src/components/upload/preview-cover.vue?4819","webpack:///./src/views/upload/index.vue?6e1e","webpack:///./src/code/upload.js","webpack:///./src/components/upload/default.vue","webpack:///./src/components/upload/default.vue?1d9a","webpack:///./src/components/upload/multiple.vue","webpack:///./src/components/upload/multiple.vue?6261","webpack:///./src/components/upload/status.vue","webpack:///./src/components/upload/status.vue?37b0","webpack:///./src/components/upload/max-count.vue","webpack:///./src/components/upload/max-count.vue?a1ca","webpack:///./src/components/upload/max-size.vue","webpack:///./src/components/upload/max-size.vue?8494","webpack:///./src/components/upload/max-size-type.vue","webpack:///./src/components/upload/max-size-type.vue?6bda","webpack:///./src/components/upload/custom-upload.vue","webpack:///./src/components/upload/custom-upload.vue?89aa","webpack:///./src/components/upload/preview-cover.vue","webpack:///./src/components/upload/preview-cover.vue?2fd0","webpack:///./src/components/upload/before-read.vue","webpack:///./src/components/upload/before-read.vue?a53b","webpack:///./src/components/upload/disabled.vue","webpack:///./src/components/upload/disabled.vue?2365","webpack:///./src/components/upload/custom-single-image.vue","webpack:///./src/components/upload/custom-single-image.vue?562a","webpack:///./src/components/upload/drag.vue","webpack:///./src/components/upload/drag.vue?7f0f","webpack:///./src/views/upload/index.vue","webpack:///./src/views/upload/index.vue?60f1"],"names":["code","fileList","ref","handleAfterRead","file","console","log","__exports__","url","isImage","status","message","setTimeout","handleOversize","this","$message","error","isOverSize","maxSize","type","size","name","fileList1","fileList2","handleBeforeRead","warning","asyncHandleBeforeRead","Promise","resolve","reject","deletable","beforeDelete","success","imageFit","previewSize","handleUploadError","Code","propsData","illustrate","default","value","imagePreviewProps","eventsData","slotsData","callbackData","resultTypeData","functionData"],"mappings":"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","file":"js/chunk-2fe110b3.1a1e3b18.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./preview-cover.vue?vue&type=style&index=0&id=bfaef23a&scoped=true&lang=css\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./index.vue?vue&type=style&index=0&id=04ee2674&lang=scss&scoped=true\"","const code = {};\n\ncode.default = `<template>\n    <ivue-upload v-model=\"fileList\" :after-read=\"handleAfterRead\"></ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([]);\n\n// 此时可以自行将文件上传至服务器\nconst handleAfterRead = (file) => {\n    console.log(file);\n};\n</script>\n`;\n\n\ncode.multiple = `<template>\n    <ivue-upload v-model=\"fileList\" multiple></ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([\n    {\n        url: 'https://pic2.zhimg.com/80/v2-0171f5d3faef3c06b8ec70a0327c3f43_720w.webp',\n    },\n    // Uploader 根据文件后缀来判断是否为图片文件\n    // 如果图片 URL 中不包含类型信息，可以添加 isImage 标记来声明\n    {\n        url: 'https://pic2.zhimg.com/80/v2-0171f5d3faef3c06b8ec70a0327c3f43_720w',\n        isImage: true,\n    },\n]);\n</script>\n`;\n\n\ncode.status = `<template>\n    <ivue-upload v-model=\"fileList\" :after-read=\"handleAfterRead\"></ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([\n    {\n        url: 'https://pica.zhimg.com/80/v2-af54c81674d7580b47988bc6cfae896c_720w.webp',\n        status: 'uploading',\n        message: '上传中...',\n    },\n    {\n        url: 'https://picx.zhimg.com/80/v2-9b27fcc905788bf1a86dc52cc6dc04df_720w.webp',\n        status: 'failed',\n        message: '上传失败',\n    },\n    {\n        url: 'https://pic1.zhimg.com/80/v2-210691412707bfd60afd05c18aa99c12_720w.webp',\n        status: 'done',\n    },\n]);\n\n// 此时可以自行将文件上传至服务器\nconst handleAfterRead = (file) => {\n    file.status = 'uploading';\n    file.message = '上传中...';\n\n    setTimeout(() => {\n        file.status = 'failed';\n        file.message = '上传失败';\n    }, 1000);\n};\n</script>\n`;\n\n\ncode.maxCount = `<template>\n    <ivue-upload v-model=\"fileList\" multiple :max-count=\"2\"></ivue-upload>\n</template>\n\nimport { ref } from 'vue';\n\nconst fileList = ref([]);\n</script>\n`;\n\n\ncode.maxSize = `<template>\n    <ivue-upload v-model=\"fileList\" :max-size=\"500 * 1024\" @on-oversize=\"handleOversize\"></ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([]);\n\nconst handleOversize = (file) => {\n    console.log(file);\n\n    this.$message.error('文件大小不能超过 500kb');\n};\n</script>\n`;\n\ncode.maxSizeType = `<template>\n    <ivue-upload v-model=\"fileList\" :max-size=\"isOverSize\"></ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([]);\n\nconst isOverSize = (file) => {\n    console.log(file);\n\n    const maxSize = file.type === 'image/jpeg' ? 500 * 1024 : 1000 * 1024;\n\n    if (file.size >= maxSize) {\n        this.$message.error(\\`文件大小不能超过 \\${maxSize}\\`);\n    }\n\n    return file.size >= maxSize;\n};\n</script>\n`;\n\ncode.customUpload = `<template>\n    <ivue-upload v-model=\"fileList\" :after-read=\"handleAfterRead\">\n        <ivue-button type=\"primary\">上传文件</ivue-button>\n    </ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([]);\n\n// 此时可以自行将文件上传至服务器\nconst handleAfterRead = (file) => {\n    console.log(file);\n};\n</script>\n`;\n\ncode.previewCover = `<template>\n    <ivue-upload v-model=\"fileList\" :after-read=\"handleAfterRead\">\n        <template #preview-cover=\"{ file }\">\n            <div class=\"preview-cover\">{{ file.name }}</div>\n        </template>\n    </ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([\n    {\n        url: 'https://pica.zhimg.com/80/v2-af54c81674d7580b47988bc6cfae896c_720w.webp',\n        status: 'done',\n        name: '记忆面包',\n    },\n    {\n        url: 'https://picx.zhimg.com/80/v2-9b27fcc905788bf1a86dc52cc6dc04df_720w.webp',\n        status: 'done',\n        name: '百宝袋',\n    },\n    {\n        url: 'https://pic1.zhimg.com/80/v2-210691412707bfd60afd05c18aa99c12_720w.webp',\n        status: 'done',\n        name: '竹蜻蜓',\n    },\n]);\n\n// 此时可以自行将文件上传至服务器\nconst handleAfterRead = (file) => {\n    console.log(file);\n};\n</script>\n\n<style scoped>\n.preview-cover {\n    position: absolute;\n    bottom: 0;\n    box-sizing: border-box;\n    width: 100%;\n    padding: 4px;\n    color: #fff;\n    font-size: 12px;\n    text-align: center;\n    background: rgba(0, 0, 0, 0.3);\n    font-weight: bold;\n}\n</style>\n`;\n\ncode.beforeRead = `<template>\n    <p>普通校验</p>\n    <ivue-upload v-model=\"fileList1\" :before-read=\"handleBeforeRead\"></ivue-upload>\n    <p>通过 Promise 校验</p>\n    <ivue-upload v-model=\"fileList2\" :before-read=\"asyncHandleBeforeRead\"></ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList1 = ref([]);\nconst fileList2 = ref([]);\n\n// 文件读取前的回调函数\nconst handleBeforeRead = (file) => {\n    if (file.type !== 'image/jpeg') {\n        this.$message.warning('请上传 jpeg 格式图片');\n\n        return false;\n    }\n    return true;\n};\n\n// 文件读取前的回调函数 返回 Promise\nconst asyncHandleBeforeRead = (file) => {\n    return new Promise((resolve, reject) => {\n        if (file.type !== 'image/jpeg') {\n            this.$message.warning('请上传 jpeg 格式图片');\n\n            reject();\n        } else {\n            resolve(file);\n        }\n    });\n};\n</script>\n`;\n\ncode.disabled = `<template>\n    <ivue-upload v-model=\"fileList\" disabled></ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([\n    {\n        url: 'https://pica.zhimg.com/80/v2-af54c81674d7580b47988bc6cfae896c_720w.webp',\n    },\n    {\n        url: 'https://picx.zhimg.com/80/v2-9b27fcc905788bf1a86dc52cc6dc04df_720w.webp',\n    },\n    {\n        url: 'https://pic1.zhimg.com/80/v2-210691412707bfd60afd05c18aa99c12_720w.webp',\n    },\n]);\n</script>\n`;\n\ncode.customSingleImage = `<template>\n    <ivue-upload v-model=\"fileList\"></ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([\n    {\n        url: 'https://pica.zhimg.com/80/v2-af54c81674d7580b47988bc6cfae896c_720w.webp',\n    },\n    {\n        url: 'https://picx.zhimg.com/80/v2-9b27fcc905788bf1a86dc52cc6dc04df_720w.webp',\n        deletable: true,\n        beforeDelete: () => {\n            this.$message.success('自定义单个预览图片删除事件');\n\n            return true;\n        },\n    },\n    {\n        url: 'https://pic1.zhimg.com/80/v2-210691412707bfd60afd05c18aa99c12_720w.webp',\n        deletable: true,\n        imageFit: 'none',\n        previewSize: 120,\n    },\n]);\n</script>\n`;\n\n\ncode.drag = `<template>\n    <ivue-upload\n        v-model=\"fileList\"\n        multiple\n        :drag-accept=\"['jpeg']\"\n        type=\"drag\"\n        @on-drag-upload-error=\"handleUploadError\"\n    ></ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([]);\n\n// 上传错误\nconst handleUploadError = (file) => {\n    // eslint-disable-next-line no-console\n    console.log('上传错误', file);\n};\n</script>\n`;\n\n\ncode.compressor = '<ivue-uploader :before-read=\"beforeRead\" />';\ncode.compressorImport = `import Compressor from 'compressorjs';\n\nexport default {\n  methods: {\n    beforeRead(file) {\n      return new Promise((resolve) => {\n        // compressorjs 默认开启 checkOrientation 选项\n        // 会将图片修正为正确方向\n        new Compressor(file, {\n          success: resolve,\n          error(err) {\n            console.log(err.message);\n          },\n        });\n      });\n    },\n  },\n};`;\n\nexport default code;\n","<template>\n    <ivue-upload v-model=\"fileList\" :after-read=\"handleAfterRead\"></ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([]);\n\n// 此时可以自行将文件上传至服务器\nconst handleAfterRead = (file) => {\n    // eslint-disable-next-line no-console\n    console.log(file);\n};\n</script>\n","import script from \"./default.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./default.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <ivue-upload v-model=\"fileList\" multiple></ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([\n    {\n        url: 'https://pic2.zhimg.com/80/v2-0171f5d3faef3c06b8ec70a0327c3f43_720w.webp',\n    },\n    // Uploader 根据文件后缀来判断是否为图片文件\n    // 如果图片 URL 中不包含类型信息，可以添加 isImage 标记来声明\n    {\n        url: 'https://pic2.zhimg.com/80/v2-0171f5d3faef3c06b8ec70a0327c3f43_720w',\n        isImage: true,\n    },\n]);\n</script>\n","import script from \"./multiple.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./multiple.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <ivue-upload v-model=\"fileList\" :after-read=\"handleAfterRead\"></ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([\n    {\n        url: 'https://pica.zhimg.com/80/v2-af54c81674d7580b47988bc6cfae896c_720w.webp',\n        status: 'uploading',\n        message: '上传中...',\n    },\n    {\n        url: 'https://picx.zhimg.com/80/v2-9b27fcc905788bf1a86dc52cc6dc04df_720w.webp',\n        status: 'failed',\n        message: '上传失败',\n    },\n    {\n        url: 'https://pic1.zhimg.com/80/v2-210691412707bfd60afd05c18aa99c12_720w.webp',\n        status: 'done',\n    },\n]);\n\n// 此时可以自行将文件上传至服务器\nconst handleAfterRead = (file) => {\n    file.status = 'uploading';\n    file.message = '上传中...';\n\n    setTimeout(() => {\n        file.status = 'failed';\n        file.message = '上传失败';\n    }, 1000);\n};\n</script>\n","import script from \"./status.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./status.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <ivue-upload v-model=\"fileList\" multiple :max-count=\"2\"></ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([]);\n</script>\n","import script from \"./max-count.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./max-count.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <ivue-upload v-model=\"fileList\" :max-size=\"500 * 1024\" @on-oversize=\"handleOversize\"></ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([]);\n\nconst handleOversize = (file) => {\n    // eslint-disable-next-line no-console\n    console.log(file);\n\n    this.$message.error('文件大小不能超过 500kb');\n};\n</script>\n","import script from \"./max-size.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./max-size.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <ivue-upload v-model=\"fileList\" :max-size=\"isOverSize\"></ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([]);\n\nconst isOverSize = (file) => {\n    // eslint-disable-next-line no-console\n    console.log(file);\n\n    const maxSize = file.type === 'image/jpeg' ? 500 * 1024 : 1000 * 1024;\n\n    if (file.size >= maxSize) {\n        this.$message.error(`文件大小不能超过 ${maxSize}`);\n    }\n\n    return file.size >= maxSize;\n};\n</script>\n","import script from \"./max-size-type.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./max-size-type.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <ivue-upload v-model=\"fileList\" :after-read=\"handleAfterRead\">\n        <ivue-button type=\"primary\">上传文件</ivue-button>\n    </ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([]);\n\n// 此时可以自行将文件上传至服务器\nconst handleAfterRead = (file) => {\n    // eslint-disable-next-line no-console\n    console.log(file);\n};\n</script>\n","import script from \"./custom-upload.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./custom-upload.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <ivue-upload v-model=\"fileList\" :after-read=\"handleAfterRead\">\n        <template #preview-cover=\"{ file }\">\n            <div class=\"preview-cover\">{{ file.name }}</div>\n        </template>\n    </ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([\n    {\n        url: 'https://pica.zhimg.com/80/v2-af54c81674d7580b47988bc6cfae896c_720w.webp',\n        status: 'done',\n        name: '记忆面包',\n    },\n    {\n        url: 'https://picx.zhimg.com/80/v2-9b27fcc905788bf1a86dc52cc6dc04df_720w.webp',\n        status: 'done',\n        name: '百宝袋',\n    },\n    {\n        url: 'https://pic1.zhimg.com/80/v2-210691412707bfd60afd05c18aa99c12_720w.webp',\n        status: 'done',\n        name: '竹蜻蜓',\n    },\n]);\n\n// 此时可以自行将文件上传至服务器\nconst handleAfterRead = (file) => {\n    // eslint-disable-next-line no-console\n    console.log(file);\n};\n</script>\n\n\n<style scoped>\n.preview-cover {\n    position: absolute;\n    bottom: 0;\n    box-sizing: border-box;\n    width: 100%;\n    padding: 4px;\n    color: #fff;\n    font-size: 12px;\n    text-align: center;\n    background: rgba(0, 0, 0, 0.3);\n    font-weight: bold;\n}\n</style>\n","import script from \"./preview-cover.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./preview-cover.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./preview-cover.vue?vue&type=style&index=0&id=bfaef23a&scoped=true&lang=css\"\n\nimport exportComponent from \"/Users/jmr/Documents/GitHub/ivue3.com/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-bfaef23a\"]])\n\nexport default __exports__","<template>\n    <p>普通校验</p>\n    <ivue-upload v-model=\"fileList1\" :before-read=\"handleBeforeRead\"></ivue-upload>\n    <p>通过 Promise 校验</p>\n    <ivue-upload v-model=\"fileList2\" :before-read=\"asyncHandleBeforeRead\"></ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList1 = ref([]);\nconst fileList2 = ref([]);\n\n// 文件读取前的回调函数\nconst handleBeforeRead = (file) => {\n    if (file.type !== 'image/jpeg') {\n        this.$message.warning('请上传 jpeg 格式图片');\n\n        return false;\n    }\n    return true;\n};\n\n// 文件读取前的回调函数 返回 Promise\nconst asyncHandleBeforeRead = (file) => {\n    return new Promise((resolve, reject) => {\n        if (file.type !== 'image/jpeg') {\n            this.$message.warning('请上传 jpeg 格式图片');\n\n            reject();\n        } else {\n            resolve(file);\n        }\n    });\n};\n</script>\n","import script from \"./before-read.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./before-read.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <ivue-upload v-model=\"fileList\" disabled></ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([\n    {\n        url: 'https://pica.zhimg.com/80/v2-af54c81674d7580b47988bc6cfae896c_720w.webp',\n    },\n    {\n        url: 'https://picx.zhimg.com/80/v2-9b27fcc905788bf1a86dc52cc6dc04df_720w.webp',\n    },\n    {\n        url: 'https://pic1.zhimg.com/80/v2-210691412707bfd60afd05c18aa99c12_720w.webp',\n    },\n]);\n</script>\n","import script from \"./disabled.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./disabled.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <ivue-upload v-model=\"fileList\"></ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([\n    {\n        url: 'https://pica.zhimg.com/80/v2-af54c81674d7580b47988bc6cfae896c_720w.webp',\n    },\n    {\n        url: 'https://picx.zhimg.com/80/v2-9b27fcc905788bf1a86dc52cc6dc04df_720w.webp',\n        deletable: true,\n        beforeDelete: () => {\n            this.$message.success('自定义单个预览图片删除事件');\n\n            return true;\n        },\n    },\n    {\n        url: 'https://pic1.zhimg.com/80/v2-210691412707bfd60afd05c18aa99c12_720w.webp',\n        deletable: true,\n        imageFit: 'none',\n        previewSize: 120,\n    },\n]);\n</script>\n","import script from \"./custom-single-image.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./custom-single-image.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <ivue-upload\n        v-model=\"fileList\"\n        multiple\n        :drag-accept=\"['jpeg']\"\n        type=\"drag\"\n        @on-drag-upload-error=\"handleUploadError\"\n    ></ivue-upload>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst fileList = ref([]);\n\n// 上传错误\nconst handleUploadError = (file) => {\n    // eslint-disable-next-line no-console\n    console.log('上传错误', file);\n};\n</script>\n","import script from \"./drag.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./drag.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div class=\"upload-wrapper\">\n        <h1>Upload 上传</h1>\n        <p>用于将本地的图片或文件上传至服务器，并在上传过程中展示预览图和上传进度。目前 Uploader 组件不包含将文件上传至服务器的接口逻辑，该步骤需要自行实现</p>\n        <h2>基本用法</h2>\n        <p>\n            最基本用法，点击上传，一次选择一个文件,文件上传完毕后会触发\n            <code>after-read</code> 回调函数，获取到对应的\n            <code>file</code> 对象\n        </p>\n        <doc-markdown :code=\"code.default\">\n            <template #demo>\n                <default></default>\n            </template>\n        </doc-markdown>\n        <h2>多选</h2>\n        <p>\n            设置属性\n            <code>multiple</code>，可以选择多个文件\n        </p>\n        <doc-markdown :code=\"code.multiple\">\n            <template #demo>\n                <multiple></multiple>\n            </template>\n        </doc-markdown>\n        <h2>上传状态</h2>\n        <p>\n            通过\n            <code>status</code> 属性可以标识上传状态，\n            <code>uploading</code> 表示上传中，\n            <code>failed</code> 表示上传失败，\n            <code>done</code> 表示上传完成\n        </p>\n        <doc-markdown :code=\"code.status\">\n            <template #demo>\n                <status></status>\n            </template>\n        </doc-markdown>\n        <h2>限制上传数量</h2>\n        <p>\n            通过\n            <code>max-count</code> 属性可以限制上传文件的数量，上传数量达到限制后，会自动隐藏上传区域\n        </p>\n        <doc-markdown :code=\"code.maxCount\">\n            <template #demo>\n                <max-count></max-count>\n            </template>\n        </doc-markdown>\n        <h2>限制上传大小</h2>\n        <p>\n            通过\n            <code>max-size</code> 属性可以限制上传文件的大小，超过大小的文件会被自动过滤，这些文件信息可以通过\n            <code>on-oversize</code> 事件获取\n        </p>\n        <doc-markdown :code=\"code.maxSize\">\n            <template #demo>\n                <max-size></max-size>\n            </template>\n        </doc-markdown>\n        <p>\n            如果需要针对不同类型的文件来作出不同的大小限制，可以在\n            <code>max-size</code> 属性中传入一个函数，在函数中通过\n            <code>file.type</code> 区分文件类型，返回\n            <code>true</code> 表示超出限制，\n            <code>false</code> 表示未超出限制\n        </p>\n        <doc-markdown :code=\"code.maxSizeType\">\n            <template #demo>\n                <max-size-type></max-size-type>\n            </template>\n        </doc-markdown>\n        <h2>自定义上传样式</h2>\n        <p>通过默认插槽可以自定义上传区域的样式</p>\n        <doc-markdown :code=\"code.customUpload\">\n            <template #demo>\n                <custom-upload></custom-upload>\n            </template>\n        </doc-markdown>\n        <h2>自定义预览样式</h2>\n        <p>\n            通过\n            <code>preview-cover</code> 插槽可以自定义覆盖在预览区域上方的内容\n        </p>\n        <doc-markdown :code=\"code.previewCover\">\n            <template #demo>\n                <preview-cover></preview-cover>\n            </template>\n        </doc-markdown>\n        <h2>上传前置处理</h2>\n        <p>\n            通过传入\n            <code>beforeRead</code> 函数可以在上传前进行校验和处理，返回\n            <code>true</code> 表示校验通过，返回\n            <code>false</code> 表示校验失败。支持返回\n            <code>Promise</code> 对\n            <code>file</code> 对象进行自定义处理，例如压缩图片\n        </p>\n        <doc-markdown :code=\"code.beforeRead\">\n            <template #demo>\n                <before-read></before-read>\n            </template>\n        </doc-markdown>\n        <h2>禁用文件上传</h2>\n        <p>\n            通过\n            <code>disabled</code> 属性禁用文件上传\n        </p>\n        <doc-markdown :code=\"code.disabled\">\n            <template #demo>\n                <disabled></disabled>\n            </template>\n        </doc-markdown>\n        <h2>自定义单个图片预览</h2>\n        <p>\n            在\n            <code>v-model</code> 数组中设置单个预览图片属性，\n            支持\n            <code>imageFit</code>,\n            <code>deletable</code>,\n            <code>previewSize</code>,\n            <code>beforeDelete</code>\n        </p>\n        <doc-markdown :code=\"code.customSingleImage\">\n            <template #demo>\n                <custom-single-image></custom-single-image>\n            </template>\n        </doc-markdown>\n        <h2>拖拽上传</h2>\n        <p>\n            设置属性\n            <code>type</code> 为\n            <code>drag</code>,可以拖拽上传,通过设置\n            <code>drag-accept</code>属性,设置拖拽接受的上传类型后缀,如:\n            <code>jpeg</code>,\n            <code>png</code>,\n            <code>jpg</code>\n        </p>\n        <doc-markdown :code=\"code.drag\">\n            <template #demo>\n                <drag></drag>\n            </template>\n        </doc-markdown>\n        <h2>API</h2>\n        <h3>Props</h3>\n        <ivue-table :data=\"propsData\" border>\n            <ivue-table-column prop=\"name\" label=\"名称\"></ivue-table-column>\n            <ivue-table-column prop=\"illustrate\" label=\"说明\" min-width=\"300\">\n                <template #default=\"props\">\n                    <p class=\"illustrate\" v-html=\"props.row.illustrate\"></p>\n                </template>\n            </ivue-table-column>\n            <ivue-table-column prop=\"type\" label=\"类型\"></ivue-table-column>\n            <ivue-table-column prop=\"value\" label=\"可选值\" width=\"200\">\n                <template #default=\"props\">\n                    <p v-html=\"props.row.value || '-'\"></p>\n                </template>\n            </ivue-table-column>\n            <ivue-table-column prop=\"default\" label=\"默认\" width=\"100\"></ivue-table-column>\n        </ivue-table>\n        <ivue-card\n            class=\"card\"\n        >注意：accept、capture 和 multiple 为浏览器 input 标签的原生属性，移动端各种机型对这些属性的支持程度有所差异，因此在不同机型和 WebView 下可能出现一些兼容性问题。</ivue-card>\n        <h3>Image Preview Props</h3>\n        <ivue-table :data=\"imagePreviewProps\" border>\n            <ivue-table-column prop=\"name\" label=\"名称\"></ivue-table-column>\n            <ivue-table-column prop=\"illustrate\" label=\"说明\" min-width=\"300\">\n                <template #default=\"props\">\n                    <p class=\"illustrate\" v-html=\"props.row.illustrate\"></p>\n                </template>\n            </ivue-table-column>\n            <ivue-table-column prop=\"type\" label=\"类型\"></ivue-table-column>\n            <ivue-table-column prop=\"value\" label=\"可选值\" width=\"100\"></ivue-table-column>\n            <ivue-table-column prop=\"default\" label=\"默认\" width=\"200\"></ivue-table-column>\n        </ivue-table>\n        <h3>Events</h3>\n        <ivue-table :data=\"eventsData\" border>\n            <ivue-table-column prop=\"name\" label=\"名称\" width=\"200\"></ivue-table-column>\n            <ivue-table-column prop=\"illustrate\" label=\"说明\" min-width=\"300\">\n                <template #default=\"props\">\n                    <p class=\"illustrate\" v-html=\"props.row.illustrate\"></p>\n                </template>\n            </ivue-table-column>\n            <ivue-table-column prop=\"value\" label=\"返回值\" width=\"150\"></ivue-table-column>\n        </ivue-table>\n        <h3>Slots</h3>\n        <ivue-table :data=\"slotsData\" border>\n            <ivue-table-column prop=\"name\" label=\"名称\" width=\"200\"></ivue-table-column>\n            <ivue-table-column prop=\"illustrate\" label=\"说明\" min-width=\"300\">\n                <template #default=\"props\">\n                    <p class=\"illustrate\" v-html=\"props.row.illustrate\"></p>\n                </template>\n            </ivue-table-column>\n            <ivue-table-column prop=\"value\" label=\"参数\" width=\"100\"></ivue-table-column>\n        </ivue-table>\n        <h3>回调参数</h3>\n        <h4>\n            <p>\n                <code>before-read</code>、\n                <code>after-read</code>、\n                <code>before-delete</code> 执行时会传递以下回调参数\n            </p>\n        </h4>\n        <ivue-table :data=\"callbackData\" border>\n            <ivue-table-column prop=\"name\" label=\"名称\" width=\"100\"></ivue-table-column>\n            <ivue-table-column prop=\"illustrate\" label=\"说明\" min-width=\"300\">\n                <template #default=\"props\">\n                    <p class=\"illustrate\" v-html=\"props.row.illustrate\"></p>\n                </template>\n            </ivue-table-column>\n            <ivue-table-column prop=\"type\" label=\"类型\" width=\"100\"></ivue-table-column>\n        </ivue-table>\n        <h3>ResultType 可选值</h3>\n        <h4>\n            <p>\n                <code>result-type</code> 字段表示文件读取结果的类型，上传大文件时，建议使用 file 类型，避免卡顿\n            </p>\n        </h4>\n        <ivue-table :data=\"resultTypeData\" border>\n            <ivue-table-column prop=\"name\" label=\"名称\" width=\"100\"></ivue-table-column>\n            <ivue-table-column prop=\"illustrate\" label=\"说明\" min-width=\"300\">\n                <template #default=\"props\">\n                    <p class=\"illustrate\" v-html=\"props.row.illustrate\"></p>\n                </template>\n            </ivue-table-column>\n        </ivue-table>\n        <h3>方法</h3>\n        <h4>\n            <p>\n                通过\n                <code>ref</code> 可以获取到\n                <code>Uploader</code> 实例并调用实例方法\n            </p>\n        </h4>\n        <ivue-table :data=\"functionData\" border>\n            <ivue-table-column prop=\"name\" label=\"名称\" width=\"150\"></ivue-table-column>\n            <ivue-table-column prop=\"illustrate\" label=\"说明\" min-width=\"300\">\n                <template #default=\"props\">\n                    <p class=\"illustrate\" v-html=\"props.row.illustrate\"></p>\n                </template>\n            </ivue-table-column>\n        </ivue-table>\n        <h3>常见问题</h3>\n        <ivue-card title=\"Uploader 在部分安卓机型上无法上传图片？\">\n            <p>{{ `Uploader 采用了 HTML 原生的 <input type=\"file /> 标签进行上传，能否上传取决于当前系统和浏览器的兼容性。当遇到无法上传的问题时，一般有以下几种情况` }}</p>\n            <ul class=\"ul\">\n                <li class=\"li\">\n                    遇到了安卓 App WebView 的兼容性问题，需要在安卓原生代码中进行兼容，可以参考此\n                    <a\n                        class=\"a\"\n                        href=\"https://blog.csdn.net/qq_32756581/article/details/112861088\"\n                        target=\"_blank\"\n                    >文章</a>\n                </li>\n                <li class=\"li\">\n                    图片格式不正确，在当前系统/浏览器中无法识别，比如\n                    <code>webp</code> 或\n                    <code>heic</code> 格式\n                </li>\n                <li class=\"li\">其他浏览器兼容性问题</li>\n            </ul>\n        </ivue-card>\n        <h3>拍照上传的图片被旋转 90 度？</h3>\n        <ivue-card title=\"Uploader 在部分安卓机型上无法上传图片？\">\n            <p>\n                部分手机在拍照上传时会出现图片被旋转 90 度的问题，这个问题可以通过\n                <a\n                    class=\"a\"\n                    href=\"https://github.com/fengyuanchen/compressorjs\"\n                    target=\"_blank\"\n                >compressorjs</a> 或其他开源库进行处理。\n                compressorjs 是一个开源的图片处理库，提供了图片压缩、图片旋转等能力。\n            </p>\n            <h4>示例</h4>\n            <p>使用 compressorjs 进行处理的示例代码如下</p>\n            <pre-code>{{ code.compressor }}</pre-code>\n            <pre-code>{{ code.compressorImport }}</pre-code>\n        </ivue-card>\n        <h3>上传 HEIC/HEIF 格式的图片后无法展示？</h3>\n        <ivue-card>\n            <p>目前 Chrome、Safari 等浏览器不支持展示 HEIC/HEIF 格式的图片，因此上传后无法在 Uploader 组件中进行预览</p>\n            <p>\n                [HEIF] 格式的兼容性请参考\n                <a href=\"https://caniuse.com/?search=heic\" target=\"_blank\">caniuse</a>\n            </p>\n        </ivue-card>\n    </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nimport Code from '@/code/upload';\n\nimport Default from '@/components/upload/default.vue';\nimport Multiple from '@/components/upload/multiple.vue';\nimport Status from '@/components/upload/status.vue';\nimport MaxCount from '@/components/upload/max-count.vue';\nimport MaxSize from '@/components/upload/max-size.vue';\nimport MaxSizeType from '@/components/upload/max-size-type.vue';\nimport CustomUpload from '@/components/upload/custom-upload.vue';\nimport PreviewCover from '@/components/upload/preview-cover.vue';\nimport BeforeRead from '@/components/upload/before-read.vue';\nimport Disabled from '@/components/upload/disabled.vue';\nimport CustomSingleImage from '@/components/upload/custom-single-image.vue';\nimport Drag from '@/components/upload/drag.vue';\n\nconst code = ref(Code);\n\n// propsData\nconst propsData = ref([\n    {\n        name: 'v-model (fileList)',\n        illustrate: '已上传的文件列表',\n        type: 'Array',\n        default: '[]',\n    },\n    {\n        name: 'accept',\n        illustrate:\n            '允许上传的文件类型，<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Input/file#%E9%99%90%E5%88%B6%E5%85%81%E8%AE%B8%E7%9A%84%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B\" target=\"_blank\">详细说明</a>',\n        type: 'String',\n        default: 'image/*',\n    },\n    {\n        name: 'name',\n        illustrate: '标识符，可以在回调函数的第二项参数中获取',\n        type: 'Number | String',\n        default: '-',\n    },\n    {\n        name: 'name',\n        illustrate: '标识符，可以在回调函数的第二项参数中获取',\n        type: 'Number | String',\n        default: '-',\n    },\n    {\n        name: 'preview-size',\n        illustrate: '预览图和上传区域的尺寸，默认单位为 <code>px</code>',\n        type: 'Number | String',\n        default: '-',\n    },\n    {\n        name: 'preview-image',\n        illustrate: '是否在上传完成后展示预览图',\n        type: 'Boolean',\n        default: 'true',\n    },\n    {\n        name: 'preview-full-image',\n        illustrate: '是否在点击预览图后展示全屏图片预览',\n        type: 'Boolean',\n        default: 'true',\n    },\n    {\n        name: 'preview-options',\n        illustrate:\n            '全屏图片预览的配置项，详情见下面的 <code>Image Preview Props</code>',\n        type: '-',\n        default: '-',\n    },\n    {\n        name: 'multiple',\n        illustrate: '是否开启图片多选，部分安卓机型不支持',\n        type: 'Boolean',\n        default: 'false',\n    },\n    {\n        name: 'disabled',\n        illustrate: '是否禁用文件上传',\n        type: 'Boolean',\n        default: 'false',\n    },\n    {\n        name: 'readonly',\n        illustrate: '是否将上传区域设置为只读状态',\n        type: 'Boolean',\n        default: 'false',\n    },\n    {\n        name: 'deletable',\n        illustrate: '是否展示删除按钮',\n        type: 'Boolean',\n        default: 'true',\n    },\n    {\n        name: 'show-upload',\n        illustrate: '是否展示上传区域',\n        type: 'Boolean',\n        default: 'true',\n    },\n    {\n        name: 'capture',\n        illustrate: '图片选取模式，可选值为 camera (直接调起摄像头)',\n        type: 'String',\n        default: '-',\n    },\n    {\n        name: 'afterRead',\n        illustrate: '文件读取完成后的回调函数',\n        type: 'Function',\n        default: '-',\n    },\n    {\n        name: 'before-read',\n        illustrate:\n            '文件读取前的回调函数，返回 false 可终止文件读取，支持返回 Promise',\n        type: 'Function',\n        default: '-',\n    },\n    {\n        name: 'before-delete',\n        illustrate:\n            '文件删除前的回调函数，返回 false 可终止文件读取，支持返回 Promise',\n        type: 'Function',\n        default: '-',\n    },\n    {\n        name: 'max-size',\n        illustrate: '文件大小限制，单位为 byte',\n        type: 'Number | String | (file: File) => boolean',\n        default: '-',\n    },\n    {\n        name: 'max-count',\n        illustrate: '文件上传数量限制',\n        type: 'Number | String',\n        default: '-',\n    },\n    {\n        name: 'result-type',\n        illustrate:\n            '文件读取结果类型，可选值为 <code>file(文件类型)</code>, <code>text(文本类型)</code>,<code>dataUrl(base64)</code>, <code>url(链接)</code>',\n        type: 'Number | String',\n        default: '-',\n    },\n    {\n        name: 'failed-icon',\n        illustrate: '预览列表上传错误时的图标',\n        type: 'String',\n        default: '-',\n    },\n    {\n        name: 'image-fit',\n        illustrate: '预览图裁剪模式',\n        type: 'String',\n        value: '<code>contain</code> | <code>cover</code> | <code>fill</code> | <code>none</code> | <code>scale-down</code>',\n        default: 'cover',\n    },\n    {\n        name: 'upload-direction',\n        illustrate: '显示上传按钮的方向,放置于预览列表之前或预览列表之后',\n        type: 'String',\n        value: '<code>left</code> | <code>right</code>',\n        default: 'right',\n    },\n]);\n\n// imagePreviewProps\nconst imagePreviewProps = ref([\n    {\n        name: 'body-overflow',\n        illustrate:\n            '当开启,<code>preview-full-image</code>时，设置弹窗防止body滚动',\n        type: 'Boolean',\n        value: '-',\n        default: 'true',\n    },\n    {\n        name: 'preview-image-initial-index',\n        illustrate: '点击预览图后展示全屏图片预览，预览图片开始位置下标',\n        type: 'Number',\n        value: '-',\n        default: '-',\n    },\n]);\n\n// eventsData\nconst eventsData = ref([\n    {\n        name: 'on-oversize',\n        illustrate: '文件大小超过限制时触发',\n        value: '(file,{name, index})',\n    },\n    {\n        name: 'on-delete',\n        illustrate: '删除文件预览时触发',\n        value: '(file,{name, index})',\n    },\n    {\n        name: 'on-preview',\n        illustrate: '点击预览图时触发',\n        value: 'file',\n    },\n    {\n        name: 'on-drag-upload-error',\n        illustrate: '拖动文件上传错误时触发，返回上传错误的文件',\n        value: 'file',\n    },\n    {\n        name: 'on-close-preview',\n        illustrate: '关闭全屏图片预览时触发',\n        value: '-',\n    },\n]);\n\n// slotsData\nconst slotsData = ref([\n    {\n        name: 'default',\n        illustrate: '自定义上传区域',\n        value: '-',\n    },\n    {\n        name: 'preview-cover',\n        illustrate: '自定义覆盖在预览区域上方的内容',\n        value: 'file',\n    },\n    {\n        name: 'preview-image',\n        illustrate: '自定义预览图片区域内容',\n        value: '-',\n    },\n]);\n\n// callbackData\nconst callbackData = ref([\n    {\n        name: 'file',\n        illustrate: 'file 对象',\n        type: 'Object',\n    },\n    {\n        name: 'detail',\n        illustrate: '包含 <code>name</code> 和 <code>index</code> 字段',\n        type: 'Object',\n    },\n]);\n\n// resultTypeData\nconst resultTypeData = ref([\n    {\n        name: 'file',\n        illustrate: '结果仅包含 File 对象',\n    },\n    {\n        name: 'url',\n        illustrate:\n            '结果包含 File 对象、Blob 对象或者 MediaSource 对象(URL.createObjectURL)',\n    },\n    {\n        name: 'text',\n        illustrate: '结果包含 File 对象，以及文件的文本内容',\n    },\n    {\n        name: 'dataUrl',\n        illustrate: '结果包含 File 对象，以及文件对应的 base64 编码',\n    },\n]);\n\n// functionData\nconst functionData = ref([\n    {\n        name: 'handleClickInput',\n        illustrate: '主动调起文件选择',\n    },\n]);\n</script>\n\n<style lang=\"scss\" scoped>\n.upload-wrapper {\n    .ul {\n        padding-left: 25px;\n    }\n\n    .li {\n        list-style: circle;\n    }\n\n    .a {\n        margin: 0;\n    }\n\n    .card {\n        margin-top: 20px;\n    }\n}\n</style>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./index.vue?vue&type=style&index=0&id=04ee2674&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/jmr/Documents/GitHub/ivue3.com/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-04ee2674\"]])\n\nexport default __exports__"],"sourceRoot":""}