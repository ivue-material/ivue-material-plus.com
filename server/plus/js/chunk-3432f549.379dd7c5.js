(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-3432f549"],{"3fe0":function(e,t,l){"use strict";l.r(t);var n=l("7a23");const o={default:'<template>\n    <ivue-auto-complete\n        v-model="value"\n        :list="data"\n        placeholder="请输入"\n        clearable\n        @on-search="handleSearch"\n    >\n        <template #prefix>\n            <ivue-icon>favorite_border</ivue-icon>\n        </template>\n        <template #suffix>\n            <ivue-icon>cruelty_free</ivue-icon>\n        </template>\n    </ivue-auto-complete>\n</template>\n\n<script setup>\nimport { ref } from \'vue\';\n\nconst value = ref(\'\');\nconst data = ref([]);\n\nconst handleSearch = (value) => {\n    data.value = !value ? [] : [value, value + value, value + value + value];\n};\n<\/script>\n',custom:'<template>\n    <ivue-auto-complete v-model="value" placeholder="请输入" @on-search="handleSearch">\n        <ivue-option v-for="item in data" :value="item" :key="item">{{ item }}</ivue-option>\n    </ivue-auto-complete>\n</template>\n\n<script setup>\nimport { ref } from \'vue\';\n\nconst value = ref(\'\');\nconst data = ref([]);\n\nconst handleSearch = (value) => {\n    data.value =\n        !value || value.indexOf(\'@\') >= 0\n            ? []\n            : [`${value}@qq.com`, `${value}@sina.com`, `${value}@163.com`];\n};\n<\/script>\n\n',notCaseSensitive:'<template>\n    <ivue-auto-complete\n        v-model="value"\n        :list="data"\n        :filter-method="filterMethod"\n        placeholder="请输入"\n    ></ivue-auto-complete>\n</template>\n\n<script setup>\nimport { ref } from \'vue\';\n\nconst value = ref(\'\');\nconst data = ref([]);\n\nconst filterMethod = (value, option) => {\n    return option.toUpperCase().indexOf(value.toUpperCase()) !== -1;\n};\n<\/script>\n',queryMod:'<template>\n    <ivue-auto-complete\n        v-model="value"\n        icon="ios-search"\n        placeholder="input here"\n        style="width:300px"\n    >\n        <div class="demo-auto-complete-item" v-for="item in data" :key="item.title">\n            <div class="demo-auto-complete-group">\n                <span>{{ item.title }}</span>\n                <a href="https://www.google.com/search?q=iView" target="_blank">更多</a>\n            </div>\n            <ivue-option v-for="option in item.children" :value="option.title" :key="option.title">\n                <span class="demo-auto-complete-title">{{ option.title }}</span>\n                <span class="demo-auto-complete-count">{{ option.count }} 人关注</span>\n            </ivue-option>\n        </div>\n        <a\n            href="https://www.google.com/search?q=iView"\n            target="_blank"\n            class="demo-auto-complete-more"\n        >查看所有结果</a>\n    </ivue-auto-complete>\n</template>\n\n<script setup>\nimport { ref } from \'vue\';\n\nconst value = ref(\'\');\nconst data = ref([\n    {\n        title: \'话题\',\n        children: [\n            {\n                title: \'View UI\',\n                count: 10000,\n            },\n            {\n                title: \'View UI Plus\',\n                count: 10600,\n            },\n        ],\n    },\n    {\n        title: \'问题\',\n        children: [\n            {\n                title: \'View UI Plus 有多好\',\n                count: 60100,\n            },\n            {\n                title: \'View UI Plus 是啥\',\n                count: 30010,\n            },\n        ],\n    },\n    {\n        title: \'文章\',\n        children: [\n            {\n                title: \'View UI Plus 是一个设计语言\',\n                count: 100000,\n            },\n        ],\n    },\n]);\n<\/script>\n\n<style lang="scss" scoped>\n.demo-auto-complete-item {\n    padding: 4px 0;\n    border-bottom: 1px solid #f6f6f6;\n}\n\n.demo-auto-complete-group {\n    font-size: 12px;\n    padding: 4px 6px;\n}\n\n.demo-auto-complete-group span {\n    color: #666;\n    font-weight: bold;\n}\n\n.demo-auto-complete-group a {\n    float: right;\n}\n\n.demo-auto-complete-count {\n    float: right;\n    color: #999;\n}\n\n.demo-auto-complete-more {\n    display: block;\n    margin: 0 auto;\n    padding: 4px;\n    text-align: center;\n    font-size: 12px;\n}\n</style>\n',remoteSearch:"<template>\n    <ivue-auto-complete\n        v-model=\"value\"\n        filterable\n        :remoteMethod=\"remoteMethod1\"\n        :loading=\"loading\"\n        placeholder=\"请输入\"\n        @on-select=\"handleSelect\"\n    >\n        <ivue-option v-for=\"item in data\" :value=\"item.value\" :key=\"item.value\">{{ item.value }}</ivue-option>\n    </ivue-auto-complete>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst loadAll = [\n    { value: 'vue', link: 'https://github.com/vuejs/vue' },\n    { value: 'element', link: 'https://github.com/ElemeFE/element' },\n    { value: 'cooking', link: 'https://github.com/ElemeFE/cooking' },\n    { value: 'mint-ui', link: 'https://github.com/ElemeFE/mint-ui' },\n    { value: 'vuex', link: 'https://github.com/vuejs/vuex' },\n    { value: 'vue-router', link: 'https://github.com/vuejs/vue-router' },\n    { value: 'babel', link: 'https://github.com/babel/babel' },\n];\n\nconst value = ref('');\nconst data = ref(loadAll);\nconst loading = ref(false);\nconst select = ref('');\n\nconst remoteMethod1 = (queryString) => {\n    if (select.value === queryString) {\n        return;\n    }\n\n    const results = queryString\n        ? loadAll.filter(\n              (item) =>\n                  item.value\n                      .toLowerCase()\n                      .indexOf(queryString.toLowerCase()) === 0\n          )\n        : loadAll;\n\n    loading.value = true;\n\n    setTimeout(() => {\n        loading.value = false;\n        data.value = results;\n    }, 3000);\n};\n\nconst handleSelect = (value) => {\n    select.value = value;\n};\n<\/script>\n"};var a=o,c={__name:"default",setup(e){const t=Object(n["ref"])(""),l=Object(n["ref"])([]),o=e=>{l.value=e?[e,e+e,e+e+e]:[]};return(e,a)=>{const c=Object(n["resolveComponent"])("ivue-icon"),u=Object(n["resolveComponent"])("ivue-auto-complete");return Object(n["openBlock"])(),Object(n["createBlock"])(u,{modelValue:t.value,"onUpdate:modelValue":a[0]||(a[0]=e=>t.value=e),list:l.value,placeholder:"请输入",clearable:"",onOnSearch:o},{prefix:Object(n["withCtx"])(()=>[Object(n["createVNode"])(c,null,{default:Object(n["withCtx"])(()=>[Object(n["createTextVNode"])("favorite_border")]),_:1})]),suffix:Object(n["withCtx"])(()=>[Object(n["createVNode"])(c,null,{default:Object(n["withCtx"])(()=>[Object(n["createTextVNode"])("cruelty_free")]),_:1})]),_:1},8,["modelValue","list"])}}};const u=c;var r=u,i={__name:"custom",setup(e){const t=Object(n["ref"])(""),l=Object(n["ref"])([]),o=e=>{l.value=!e||e.indexOf("@")>=0?[]:[e+"@qq.com",e+"@sina.com",e+"@163.com"]};return(e,a)=>{const c=Object(n["resolveComponent"])("ivue-option"),u=Object(n["resolveComponent"])("ivue-auto-complete");return Object(n["openBlock"])(),Object(n["createBlock"])(u,{modelValue:t.value,"onUpdate:modelValue":a[0]||(a[0]=e=>t.value=e),placeholder:"请输入",onOnSearch:o},{default:Object(n["withCtx"])(()=>[(Object(n["openBlock"])(!0),Object(n["createElementBlock"])(n["Fragment"],null,Object(n["renderList"])(l.value,e=>(Object(n["openBlock"])(),Object(n["createBlock"])(c,{value:e,key:e},{default:Object(n["withCtx"])(()=>[Object(n["createTextVNode"])(Object(n["toDisplayString"])(e),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue"])}}};const d=i;var m=d,s={__name:"not-case-sensitive",setup(e){const t=Object(n["ref"])(""),l=Object(n["ref"])([]),o=(e,t)=>-1!==t.toUpperCase().indexOf(e.toUpperCase());return(e,a)=>{const c=Object(n["resolveComponent"])("ivue-auto-complete");return Object(n["openBlock"])(),Object(n["createBlock"])(c,{modelValue:t.value,"onUpdate:modelValue":a[0]||(a[0]=e=>t.value=e),list:l.value,"filter-method":o,placeholder:"请输入"},null,8,["modelValue","list"])}}};const p=s;var b=p;const v=e=>(Object(n["pushScopeId"])("data-v-4770c1eb"),e=e(),Object(n["popScopeId"])(),e),O={class:"demo-auto-complete-group"},j=v(()=>Object(n["createElementVNode"])("a",{href:"https://www.google.com/search?q=iView",target:"_blank"},"更多",-1)),f={class:"demo-auto-complete-title"},h={class:"demo-auto-complete-count"},V=v(()=>Object(n["createElementVNode"])("a",{href:"https://www.google.com/search?q=iView",target:"_blank",class:"demo-auto-complete-more"},"查看所有结果",-1));var g={__name:"query-mode",setup(e){const t=Object(n["ref"])(""),l=Object(n["ref"])([{title:"话题",children:[{title:"View UI",count:1e4},{title:"View UI Plus",count:10600}]},{title:"问题",children:[{title:"View UI Plus 有多好",count:60100},{title:"View UI Plus 是啥",count:30010}]},{title:"文章",children:[{title:"View UI Plus 是一个设计语言",count:1e5}]}]);return(e,o)=>{const a=Object(n["resolveComponent"])("ivue-option"),c=Object(n["resolveComponent"])("ivue-auto-complete");return Object(n["openBlock"])(),Object(n["createBlock"])(c,{modelValue:t.value,"onUpdate:modelValue":o[0]||(o[0]=e=>t.value=e),icon:"ios-search",placeholder:"input here",style:{width:"300px"}},{default:Object(n["withCtx"])(()=>[(Object(n["openBlock"])(!0),Object(n["createElementBlock"])(n["Fragment"],null,Object(n["renderList"])(l.value,e=>(Object(n["openBlock"])(),Object(n["createElementBlock"])("div",{class:"demo-auto-complete-item",key:e.title},[Object(n["createElementVNode"])("div",O,[Object(n["createElementVNode"])("span",null,Object(n["toDisplayString"])(e.title),1),j]),(Object(n["openBlock"])(!0),Object(n["createElementBlock"])(n["Fragment"],null,Object(n["renderList"])(e.children,e=>(Object(n["openBlock"])(),Object(n["createBlock"])(a,{value:e.title,key:e.title},{default:Object(n["withCtx"])(()=>[Object(n["createElementVNode"])("span",f,Object(n["toDisplayString"])(e.title),1),Object(n["createElementVNode"])("span",h,Object(n["toDisplayString"])(e.count)+" 人关注",1)]),_:2},1032,["value"]))),128))]))),128)),V]),_:1},8,["modelValue"])}}},w=(l("96c9"),l("6b0d")),N=l.n(w);const k=N()(g,[["__scopeId","data-v-4770c1eb"]]);var x=k,E={__name:"remote-search",setup(e){const t=[{value:"vue",link:"https://github.com/vuejs/vue"},{value:"element",link:"https://github.com/ElemeFE/element"},{value:"cooking",link:"https://github.com/ElemeFE/cooking"},{value:"mint-ui",link:"https://github.com/ElemeFE/mint-ui"},{value:"vuex",link:"https://github.com/vuejs/vuex"},{value:"vue-router",link:"https://github.com/vuejs/vue-router"},{value:"babel",link:"https://github.com/babel/babel"}],l=Object(n["ref"])(""),o=Object(n["ref"])(t),a=Object(n["ref"])(!1),c=Object(n["ref"])(""),u=e=>{if(c.value===e)return;const l=e?t.filter(t=>0===t.value.toLowerCase().indexOf(e.toLowerCase())):t;a.value=!0,setTimeout(()=>{a.value=!1,o.value=l},3e3)},r=e=>{c.value=e};return(e,t)=>{const c=Object(n["resolveComponent"])("ivue-option"),i=Object(n["resolveComponent"])("ivue-auto-complete");return Object(n["openBlock"])(),Object(n["createBlock"])(i,{modelValue:l.value,"onUpdate:modelValue":t[0]||(t[0]=e=>l.value=e),filterable:"",remoteMethod:u,loading:a.value,placeholder:"请输入",onOnSelect:r},{default:Object(n["withCtx"])(()=>[(Object(n["openBlock"])(!0),Object(n["createElementBlock"])(n["Fragment"],null,Object(n["renderList"])(o.value,e=>(Object(n["openBlock"])(),Object(n["createBlock"])(c,{value:e.value,key:e.value},{default:Object(n["withCtx"])(()=>[Object(n["createTextVNode"])(Object(n["toDisplayString"])(e.value),1)]),_:2},1032,["value"]))),128))]),_:1},8,["modelValue","loading"])}}};const y=E;var C=y;const _=Object(n["createElementVNode"])("h1",null,"AutoComplete 自动完成",-1),B=Object(n["createElementVNode"])("p",null,"该组件提供简单灵活的预先输入功能。这在搜索大型数据集或甚至从API动态请求信息时非常有用。",-1),S=Object(n["createElementVNode"])("h2",null,"基础用法",-1),T=Object(n["createElementVNode"])("p",null,[Object(n["createTextVNode"])(" 基本用法，通过 "),Object(n["createElementVNode"])("code",null,"list"),Object(n["createTextVNode"])(" 设置自动完成的数据源 ")],-1),U=Object(n["createElementVNode"])("h2",null,"自定义选项",-1),q=Object(n["createElementVNode"])("p",null,[Object(n["createElementVNode"])("span",null,"除了使用"),Object(n["createElementVNode"])("code",null,"list"),Object(n["createElementVNode"])("span",null,"，还可以直接传入"),Object(n["createElementVNode"])("code",null,"ivue-option"),Object(n["createElementVNode"])("span",null,[Object(n["createTextVNode"])(" 组件作为 "),Object(n["createElementVNode"])("code",null,"slot"),Object(n["createTextVNode"])(" 使用，这样可以自定义显示效果。 ")])],-1),I=Object(n["createElementVNode"])("h2",null,"不区分大小写",-1),L=Object(n["createElementVNode"])("p",null,[Object(n["createTextVNode"])(" 不区分大小写的 "),Object(n["createElementVNode"])("code",null,"auto-complete"),Object(n["createTextVNode"])("，及过滤的用法 ")],-1),M=Object(n["createElementVNode"])("h2",null,"查询模式",-1),F=Object(n["createElementVNode"])("p",null,[Object(n["createTextVNode"])(" 完全自定义 "),Object(n["createElementVNode"])("code",null,"ivue-option"),Object(n["createTextVNode"])("，显示复杂的布局 ")],-1),P=Object(n["createElementVNode"])("h2",null,"远程搜索",-1),A=Object(n["createElementVNode"])("p",null,"从服务端搜索数据",-1),H=Object(n["createElementVNode"])("h2",null,"API",-1),D=Object(n["createElementVNode"])("h3",null,"Props",-1),$=["innerHTML"],z=["innerHTML"],J=Object(n["createElementVNode"])("h3",null,"Events",-1),G=["innerHTML"];var K={__name:"index",setup(e){const t=Object(n["ref"])(a),l=Object(n["ref"])([{name:"model-value / v-model",illustrate:"选中项绑定值",type:"String",default:"-"},{name:"placeholder",illustrate:"占位文本",type:"String",default:"-"},{name:"disabled",illustrate:"是否禁用",type:"Boolean",default:"false"},{name:"clearable",illustrate:"是否可以清空选项",type:"Boolean",default:"false"},{name:"placement",illustrate:"弹窗的展开方向",type:"String",value:"<code>top</code> | <code>top-start</code> | <code>top-end</code> | <code>bottom</code> | <code>bottom-start</code> | <code>bottom-end</code>",default:"bottom-start"},{name:"transfer-class-name",illustrate:"开启 <code>transfer</code> 时，给浮层添加额外的 <code>class</code> 名称",type:"Boolean",default:"false"},{name:"transfer",illustrate:"是否将弹层放置于 body 内，在下拉列表的定位出现问题时，可将该属性设置为 <code>true</code>",type:"Boolean",default:"false"},{name:"capture",illustrate:"是否开启外部点击的 <code>capture</code> 模式，可通过全局配置",type:"Boolean",default:"true"},{name:"list",illustrate:"自动完成的数据源",type:"Array",default:"[]"},{name:"filter-method",illustrate:"是否根据输入项进行筛选。当其为一个函数时，会接收 <code>value</code> 和 <code>option</code> 两个参数，当 <code>option</code> 符合筛选条件时，应返回 <code>true</code>，反之则返回 <code>false</code>",type:"Function | Boolean",default:"false"},{name:"remote-method",illustrate:"远程搜索的方法, 用于请求搜索数据, 接收参数 <code>queryString</code> 为输入框的内容",type:"Function",default:"-"},{name:"loading",illustrate:"加载中",type:"Boolean",default:"false"},{name:"loading-text",illustrate:"加载中的文字提示",type:"String",default:"-"}]),o=Object(n["ref"])([{name:"on-change",illustrate:"选中 <code>ivue-option</code>，或 <code>input</code> 的 <code>value</code> 变化时，调用此函数",default:"value"},{name:"on-select",illustrate:"被选中时调用，参数为选中项的 <code>value</code> 值",default:"value"},{name:"on-search",illustrate:"搜索补全项的时候调用",default:"query"},{name:"on-focus",illustrate:"聚焦时触发",default:"event"},{name:"on-blur",illustrate:"失焦时触发",default:"event"},{name:"on-change",illustrate:"清空时触发",default:"无"}]);return(e,a)=>{const c=Object(n["resolveComponent"])("doc-markdown"),u=Object(n["resolveComponent"])("ivue-table-column"),i=Object(n["resolveComponent"])("ivue-table");return Object(n["openBlock"])(),Object(n["createElementBlock"])("div",null,[_,B,S,T,Object(n["createVNode"])(c,{code:t.value.default},{demo:Object(n["withCtx"])(()=>[Object(n["createVNode"])(r)]),_:1},8,["code"]),U,q,Object(n["createVNode"])(c,{code:t.value.custom},{demo:Object(n["withCtx"])(()=>[Object(n["createVNode"])(m)]),_:1},8,["code"]),I,L,Object(n["createVNode"])(c,{code:t.value.notCaseSensitive},{demo:Object(n["withCtx"])(()=>[Object(n["createVNode"])(b)]),_:1},8,["code"]),M,F,Object(n["createVNode"])(c,{code:t.value.queryMod},{demo:Object(n["withCtx"])(()=>[Object(n["createVNode"])(x)]),_:1},8,["code"]),P,A,Object(n["createVNode"])(c,{code:t.value.remoteSearch},{demo:Object(n["withCtx"])(()=>[Object(n["createVNode"])(C)]),_:1},8,["code"]),H,D,Object(n["createVNode"])(i,{data:l.value,border:""},{default:Object(n["withCtx"])(()=>[Object(n["createVNode"])(u,{prop:"name",label:"名称",width:"200"}),Object(n["createVNode"])(u,{prop:"illustrate",label:"说明","min-width":"300"},{default:Object(n["withCtx"])(e=>[Object(n["createElementVNode"])("p",{innerHTML:e.row.illustrate},null,8,$)]),_:1}),Object(n["createVNode"])(u,{prop:"type",label:"类型",width:"150"}),Object(n["createVNode"])(u,{prop:"value",label:"可选值",width:"200"},{default:Object(n["withCtx"])(e=>[Object(n["createElementVNode"])("p",{innerHTML:e.row.value||"-"},null,8,z)]),_:1}),Object(n["createVNode"])(u,{prop:"default",label:"默认",width:"120"})]),_:1},8,["data"]),J,Object(n["createVNode"])(i,{data:o.value,border:""},{default:Object(n["withCtx"])(()=>[Object(n["createVNode"])(u,{prop:"name",label:"事件名",width:"200"}),Object(n["createVNode"])(u,{prop:"illustrate",label:"说明","min-width":"300"},{default:Object(n["withCtx"])(e=>[Object(n["createElementVNode"])("p",{innerHTML:e.row.illustrate},null,8,G)]),_:1}),Object(n["createVNode"])(u,{prop:"default",label:"返回值",width:"100"})]),_:1},8,["data"])])}}};const Q=K;t["default"]=Q},"58f4":function(e,t,l){},"96c9":function(e,t,l){"use strict";l("58f4")}}]);
//# sourceMappingURL=chunk-3432f549.379dd7c5.js.map