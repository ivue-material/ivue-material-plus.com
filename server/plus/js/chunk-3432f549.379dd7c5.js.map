{"version":3,"sources":["webpack:///./src/code/auto-complete.js","webpack:///./src/components/auto-complete/default.vue","webpack:///./src/components/auto-complete/default.vue?95d6","webpack:///./src/components/auto-complete/custom.vue","webpack:///./src/components/auto-complete/custom.vue?d333","webpack:///./src/components/auto-complete/not-case-sensitive.vue","webpack:///./src/components/auto-complete/not-case-sensitive.vue?d452","webpack:///./src/components/auto-complete/query-mode.vue","webpack:///./src/components/auto-complete/query-mode.vue?a843","webpack:///./src/components/auto-complete/remote-search.vue","webpack:///./src/components/auto-complete/remote-search.vue?66c4","webpack:///./src/views/auto-complete/index.vue","webpack:///./src/views/auto-complete/index.vue?b0d4","webpack:///./src/components/auto-complete/query-mode.vue?0e75"],"names":["code","value","ref","data","handleSearch","__exports__","indexOf","filterMethod","option","toUpperCase","title","children","count","loadAll","link","loading","select","remoteMethod1","queryString","results","filter","item","toLowerCase","setTimeout","handleSelect","Code","propsData","name","illustrate","type","default","eventsData"],"mappings":"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","file":"js/chunk-3432f549.379dd7c5.js","sourcesContent":["const code = {};\n\ncode.default = `<template>\n    <ivue-auto-complete\n        v-model=\"value\"\n        :list=\"data\"\n        placeholder=\"请输入\"\n        clearable\n        @on-search=\"handleSearch\"\n    >\n        <template #prefix>\n            <ivue-icon>favorite_border</ivue-icon>\n        </template>\n        <template #suffix>\n            <ivue-icon>cruelty_free</ivue-icon>\n        </template>\n    </ivue-auto-complete>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst value = ref('');\nconst data = ref([]);\n\nconst handleSearch = (value) => {\n    data.value = !value ? [] : [value, value + value, value + value + value];\n};\n</script>\n`;\n\ncode.custom = `<template>\n    <ivue-auto-complete v-model=\"value\" placeholder=\"请输入\" @on-search=\"handleSearch\">\n        <ivue-option v-for=\"item in data\" :value=\"item\" :key=\"item\">{{ item }}</ivue-option>\n    </ivue-auto-complete>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst value = ref('');\nconst data = ref([]);\n\nconst handleSearch = (value) => {\n    data.value =\n        !value || value.indexOf('@') >= 0\n            ? []\n            : [\\`\\${value}@qq.com\\`, \\`\\${value}@sina.com\\`, \\`\\${value}@163.com\\`];\n};\n</script>\n\n`;\n\ncode.notCaseSensitive = `<template>\n    <ivue-auto-complete\n        v-model=\"value\"\n        :list=\"data\"\n        :filter-method=\"filterMethod\"\n        placeholder=\"请输入\"\n    ></ivue-auto-complete>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst value = ref('');\nconst data = ref([]);\n\nconst filterMethod = (value, option) => {\n    return option.toUpperCase().indexOf(value.toUpperCase()) !== -1;\n};\n</script>\n`;\n\ncode.queryMod = `<template>\n    <ivue-auto-complete\n        v-model=\"value\"\n        icon=\"ios-search\"\n        placeholder=\"input here\"\n        style=\"width:300px\"\n    >\n        <div class=\"demo-auto-complete-item\" v-for=\"item in data\" :key=\"item.title\">\n            <div class=\"demo-auto-complete-group\">\n                <span>{{ item.title }}</span>\n                <a href=\"https://www.google.com/search?q=iView\" target=\"_blank\">更多</a>\n            </div>\n            <ivue-option v-for=\"option in item.children\" :value=\"option.title\" :key=\"option.title\">\n                <span class=\"demo-auto-complete-title\">{{ option.title }}</span>\n                <span class=\"demo-auto-complete-count\">{{ option.count }} 人关注</span>\n            </ivue-option>\n        </div>\n        <a\n            href=\"https://www.google.com/search?q=iView\"\n            target=\"_blank\"\n            class=\"demo-auto-complete-more\"\n        >查看所有结果</a>\n    </ivue-auto-complete>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst value = ref('');\nconst data = ref([\n    {\n        title: '话题',\n        children: [\n            {\n                title: 'View UI',\n                count: 10000,\n            },\n            {\n                title: 'View UI Plus',\n                count: 10600,\n            },\n        ],\n    },\n    {\n        title: '问题',\n        children: [\n            {\n                title: 'View UI Plus 有多好',\n                count: 60100,\n            },\n            {\n                title: 'View UI Plus 是啥',\n                count: 30010,\n            },\n        ],\n    },\n    {\n        title: '文章',\n        children: [\n            {\n                title: 'View UI Plus 是一个设计语言',\n                count: 100000,\n            },\n        ],\n    },\n]);\n</script>\n\n<style lang=\"scss\" scoped>\n.demo-auto-complete-item {\n    padding: 4px 0;\n    border-bottom: 1px solid #f6f6f6;\n}\n\n.demo-auto-complete-group {\n    font-size: 12px;\n    padding: 4px 6px;\n}\n\n.demo-auto-complete-group span {\n    color: #666;\n    font-weight: bold;\n}\n\n.demo-auto-complete-group a {\n    float: right;\n}\n\n.demo-auto-complete-count {\n    float: right;\n    color: #999;\n}\n\n.demo-auto-complete-more {\n    display: block;\n    margin: 0 auto;\n    padding: 4px;\n    text-align: center;\n    font-size: 12px;\n}\n</style>\n`;\n\ncode.remoteSearch = `<template>\n    <ivue-auto-complete\n        v-model=\"value\"\n        filterable\n        :remoteMethod=\"remoteMethod1\"\n        :loading=\"loading\"\n        placeholder=\"请输入\"\n        @on-select=\"handleSelect\"\n    >\n        <ivue-option v-for=\"item in data\" :value=\"item.value\" :key=\"item.value\">{{ item.value }}</ivue-option>\n    </ivue-auto-complete>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst loadAll = [\n    { value: 'vue', link: 'https://github.com/vuejs/vue' },\n    { value: 'element', link: 'https://github.com/ElemeFE/element' },\n    { value: 'cooking', link: 'https://github.com/ElemeFE/cooking' },\n    { value: 'mint-ui', link: 'https://github.com/ElemeFE/mint-ui' },\n    { value: 'vuex', link: 'https://github.com/vuejs/vuex' },\n    { value: 'vue-router', link: 'https://github.com/vuejs/vue-router' },\n    { value: 'babel', link: 'https://github.com/babel/babel' },\n];\n\nconst value = ref('');\nconst data = ref(loadAll);\nconst loading = ref(false);\nconst select = ref('');\n\nconst remoteMethod1 = (queryString) => {\n    if (select.value === queryString) {\n        return;\n    }\n\n    const results = queryString\n        ? loadAll.filter(\n              (item) =>\n                  item.value\n                      .toLowerCase()\n                      .indexOf(queryString.toLowerCase()) === 0\n          )\n        : loadAll;\n\n    loading.value = true;\n\n    setTimeout(() => {\n        loading.value = false;\n        data.value = results;\n    }, 3000);\n};\n\nconst handleSelect = (value) => {\n    select.value = value;\n};\n</script>\n`;\n\nexport default code;\n","<template>\n    <ivue-auto-complete\n        v-model=\"value\"\n        :list=\"data\"\n        placeholder=\"请输入\"\n        clearable\n        @on-search=\"handleSearch\"\n    >\n        <template #prefix>\n            <ivue-icon>favorite_border</ivue-icon>\n        </template>\n        <template #suffix>\n            <ivue-icon>cruelty_free</ivue-icon>\n        </template>\n    </ivue-auto-complete>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst value = ref('');\nconst data = ref([]);\n\nconst handleSearch = (value) => {\n    data.value = !value ? [] : [value, value + value, value + value + value];\n};\n</script>\n","import script from \"./default.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./default.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <ivue-auto-complete v-model=\"value\" placeholder=\"请输入\" @on-search=\"handleSearch\">\n        <ivue-option v-for=\"item in data\" :value=\"item\" :key=\"item\">{{ item }}</ivue-option>\n    </ivue-auto-complete>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst value = ref('');\nconst data = ref([]);\n\nconst handleSearch = (value) => {\n    data.value =\n        !value || value.indexOf('@') >= 0\n            ? []\n            : [`${value}@qq.com`, `${value}@sina.com`, `${value}@163.com`];\n};\n</script>\n","import script from \"./custom.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./custom.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <ivue-auto-complete\n        v-model=\"value\"\n        :list=\"data\"\n        :filter-method=\"filterMethod\"\n        placeholder=\"请输入\"\n    ></ivue-auto-complete>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst value = ref('');\nconst data = ref([]);\n\nconst filterMethod = (value, option) => {\n    return option.toUpperCase().indexOf(value.toUpperCase()) !== -1;\n};\n</script>\n","import script from \"./not-case-sensitive.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./not-case-sensitive.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <ivue-auto-complete\n        v-model=\"value\"\n        icon=\"ios-search\"\n        placeholder=\"input here\"\n        style=\"width:300px\"\n    >\n        <div class=\"demo-auto-complete-item\" v-for=\"item in data\" :key=\"item.title\">\n            <div class=\"demo-auto-complete-group\">\n                <span>{{ item.title }}</span>\n                <a href=\"https://www.google.com/search?q=iView\" target=\"_blank\">更多</a>\n            </div>\n            <ivue-option v-for=\"option in item.children\" :value=\"option.title\" :key=\"option.title\">\n                <span class=\"demo-auto-complete-title\">{{ option.title }}</span>\n                <span class=\"demo-auto-complete-count\">{{ option.count }} 人关注</span>\n            </ivue-option>\n        </div>\n        <a\n            href=\"https://www.google.com/search?q=iView\"\n            target=\"_blank\"\n            class=\"demo-auto-complete-more\"\n        >查看所有结果</a>\n    </ivue-auto-complete>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst value = ref('');\nconst data = ref([\n    {\n        title: '话题',\n        children: [\n            {\n                title: 'View UI',\n                count: 10000,\n            },\n            {\n                title: 'View UI Plus',\n                count: 10600,\n            },\n        ],\n    },\n    {\n        title: '问题',\n        children: [\n            {\n                title: 'View UI Plus 有多好',\n                count: 60100,\n            },\n            {\n                title: 'View UI Plus 是啥',\n                count: 30010,\n            },\n        ],\n    },\n    {\n        title: '文章',\n        children: [\n            {\n                title: 'View UI Plus 是一个设计语言',\n                count: 100000,\n            },\n        ],\n    },\n]);\n</script>\n\n<style lang=\"scss\" scoped>\n.demo-auto-complete-item {\n    padding: 4px 0;\n    border-bottom: 1px solid #f6f6f6;\n}\n\n.demo-auto-complete-group {\n    font-size: 12px;\n    padding: 4px 6px;\n}\n\n.demo-auto-complete-group span {\n    color: #666;\n    font-weight: bold;\n}\n\n.demo-auto-complete-group a {\n    float: right;\n}\n\n.demo-auto-complete-count {\n    float: right;\n    color: #999;\n}\n\n.demo-auto-complete-more {\n    display: block;\n    margin: 0 auto;\n    padding: 4px;\n    text-align: center;\n    font-size: 12px;\n}\n</style>\n","import script from \"./query-mode.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./query-mode.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./query-mode.vue?vue&type=style&index=0&id=4770c1eb&lang=scss&scoped=true\"\n\nimport exportComponent from \"/Users/jmr/Documents/GitHub/ivue3.com/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-4770c1eb\"]])\n\nexport default __exports__","<template>\n    <ivue-auto-complete\n        v-model=\"value\"\n        filterable\n        :remoteMethod=\"remoteMethod1\"\n        :loading=\"loading\"\n        placeholder=\"请输入\"\n        @on-select=\"handleSelect\"\n    >\n        <ivue-option v-for=\"item in data\" :value=\"item.value\" :key=\"item.value\">{{ item.value }}</ivue-option>\n    </ivue-auto-complete>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nconst loadAll = [\n    { value: 'vue', link: 'https://github.com/vuejs/vue' },\n    { value: 'element', link: 'https://github.com/ElemeFE/element' },\n    { value: 'cooking', link: 'https://github.com/ElemeFE/cooking' },\n    { value: 'mint-ui', link: 'https://github.com/ElemeFE/mint-ui' },\n    { value: 'vuex', link: 'https://github.com/vuejs/vuex' },\n    { value: 'vue-router', link: 'https://github.com/vuejs/vue-router' },\n    { value: 'babel', link: 'https://github.com/babel/babel' },\n];\n\nconst value = ref('');\nconst data = ref(loadAll);\nconst loading = ref(false);\nconst select = ref('');\n\nconst remoteMethod1 = (queryString) => {\n    if (select.value === queryString) {\n        return;\n    }\n\n    const results = queryString\n        ? loadAll.filter(\n              (item) =>\n                  item.value\n                      .toLowerCase()\n                      .indexOf(queryString.toLowerCase()) === 0\n          )\n        : loadAll;\n\n    loading.value = true;\n\n    setTimeout(() => {\n        loading.value = false;\n        data.value = results;\n    }, 3000);\n};\n\nconst handleSelect = (value) => {\n    select.value = value;\n};\n</script>\n","import script from \"./remote-search.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./remote-search.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\n    <div>\n        <h1>AutoComplete 自动完成</h1>\n        <p>该组件提供简单灵活的预先输入功能。这在搜索大型数据集或甚至从API动态请求信息时非常有用。</p>\n        <h2>基础用法</h2>\n        <p>\n            基本用法，通过\n            <code>list</code> 设置自动完成的数据源\n        </p>\n        <doc-markdown :code=\"code.default\">\n            <template #demo>\n                <default></default>\n            </template>\n        </doc-markdown>\n        <h2>自定义选项</h2>\n        <p>\n            <span>除了使用</span>\n            <code>list</code>\n            <span>，还可以直接传入</span>\n            <code>ivue-option</code>\n            <span>\n                组件作为\n                <code>slot</code> 使用，这样可以自定义显示效果。\n            </span>\n        </p>\n        <doc-markdown :code=\"code.custom\">\n            <template #demo>\n                <custom></custom>\n            </template>\n        </doc-markdown>\n        <h2>不区分大小写</h2>\n        <p>\n            不区分大小写的\n            <code>auto-complete</code>，及过滤的用法\n        </p>\n        <doc-markdown :code=\"code.notCaseSensitive\">\n            <template #demo>\n                <not-case-sensitive></not-case-sensitive>\n            </template>\n        </doc-markdown>\n        <h2>查询模式</h2>\n        <p>\n            完全自定义\n            <code>ivue-option</code>，显示复杂的布局\n        </p>\n        <doc-markdown :code=\"code.queryMod\">\n            <template #demo>\n                <query-mode></query-mode>\n            </template>\n        </doc-markdown>\n        <h2>远程搜索</h2>\n        <p>从服务端搜索数据</p>\n        <doc-markdown :code=\"code.remoteSearch\">\n            <template #demo>\n                <remote-search></remote-search>\n            </template>\n        </doc-markdown>\n        <h2>API</h2>\n        <h3>Props</h3>\n        <ivue-table :data=\"propsData\" border>\n            <ivue-table-column prop=\"name\" label=\"名称\" width=\"200\"></ivue-table-column>\n            <ivue-table-column prop=\"illustrate\" label=\"说明\" min-width=\"300\">\n                <template #default=\"props\">\n                    <p v-html=\"props.row.illustrate\"></p>\n                </template>\n            </ivue-table-column>\n            <ivue-table-column prop=\"type\" label=\"类型\" width=\"150\"></ivue-table-column>\n            <ivue-table-column prop=\"value\" label=\"可选值\" width=\"200\">\n                <template #default=\"props\">\n                    <p v-html=\"props.row.value || '-'\"></p>\n                </template>\n            </ivue-table-column>\n            <ivue-table-column prop=\"default\" label=\"默认\" width=\"120\"></ivue-table-column>\n        </ivue-table>\n        <h3>Events</h3>\n        <ivue-table :data=\"eventsData\" border>\n            <ivue-table-column prop=\"name\" label=\"事件名\" width=\"200\"></ivue-table-column>\n            <ivue-table-column prop=\"illustrate\" label=\"说明\" min-width=\"300\">\n                <template #default=\"props\">\n                    <p v-html=\"props.row.illustrate\"></p>\n                </template>\n            </ivue-table-column>\n            <ivue-table-column prop=\"default\" label=\"返回值\" width=\"100\"></ivue-table-column>\n        </ivue-table>\n    </div>\n</template>\n\n<script setup>\nimport { ref } from 'vue';\n\nimport Code from '@/code/auto-complete';\n\nimport Default from '@/components/auto-complete/default.vue';\nimport Custom from '@/components/auto-complete/custom.vue';\nimport NotCaseSensitive from '@/components/auto-complete/not-case-sensitive.vue';\nimport QueryMode from '@/components/auto-complete/query-mode.vue';\nimport RemoteSearch from '@/components/auto-complete/remote-search.vue';\n\nconst code = ref(Code);\n\n// propsData\nconst propsData = ref([\n    {\n        name: 'model-value / v-model',\n        illustrate: '选中项绑定值',\n        type: 'String',\n        default: '-',\n    },\n    {\n        name: 'placeholder',\n        illustrate: '占位文本',\n        type: 'String',\n        default: '-',\n    },\n    {\n        name: 'disabled',\n        illustrate: '是否禁用',\n        type: 'Boolean',\n        default: 'false',\n    },\n    {\n        name: 'clearable',\n        illustrate: '是否可以清空选项',\n        type: 'Boolean',\n        default: 'false',\n    },\n    {\n        name: 'placement',\n        illustrate: '弹窗的展开方向',\n        type: 'String',\n        value: '<code>top</code> | <code>top-start</code> | <code>top-end</code> | <code>bottom</code> | <code>bottom-start</code> | <code>bottom-end</code>',\n        default: 'bottom-start',\n    },\n    {\n        name: 'transfer-class-name',\n        illustrate:\n            '开启 <code>transfer</code> 时，给浮层添加额外的 <code>class</code> 名称',\n        type: 'Boolean',\n        default: 'false',\n    },\n    {\n        name: 'transfer',\n        illustrate:\n            '是否将弹层放置于 body 内，在下拉列表的定位出现问题时，可将该属性设置为 <code>true</code>',\n        type: 'Boolean',\n        default: 'false',\n    },\n    {\n        name: 'capture',\n        illustrate:\n            '是否开启外部点击的 <code>capture</code> 模式，可通过全局配置',\n        type: 'Boolean',\n        default: 'true',\n    },\n    {\n        name: 'list',\n        illustrate: '自动完成的数据源',\n        type: 'Array',\n        default: '[]',\n    },\n    {\n        name: 'filter-method',\n        illustrate:\n            '是否根据输入项进行筛选。当其为一个函数时，会接收 <code>value</code> 和 <code>option</code> 两个参数，当 <code>option</code> 符合筛选条件时，应返回 <code>true</code>，反之则返回 <code>false</code>',\n        type: 'Function | Boolean',\n        default: 'false',\n    },\n    {\n        name: 'remote-method',\n        illustrate:\n            '远程搜索的方法, 用于请求搜索数据, 接收参数 <code>queryString</code> 为输入框的内容',\n        type: 'Function',\n        default: '-',\n    },\n    {\n        name: 'loading',\n        illustrate: '加载中',\n        type: 'Boolean',\n        default: 'false',\n    },\n    {\n        name: 'loading-text',\n        illustrate: '加载中的文字提示',\n        type: 'String',\n        default: '-',\n    },\n]);\n\n// eventsData\nconst eventsData = ref([\n    {\n        name: 'on-change',\n        illustrate:\n            '选中 <code>ivue-option</code>，或 <code>input</code> 的 <code>value</code> 变化时，调用此函数',\n        default: 'value',\n    },\n    {\n        name: 'on-select',\n        illustrate: '被选中时调用，参数为选中项的 <code>value</code> 值',\n        default: 'value',\n    },\n    {\n        name: 'on-search',\n        illustrate: '搜索补全项的时候调用',\n        default: 'query',\n    },\n    {\n        name: 'on-focus',\n        illustrate: '聚焦时触发',\n        default: 'event',\n    },\n    {\n        name: 'on-blur',\n        illustrate: '失焦时触发',\n        default: 'event',\n    },\n    {\n        name: 'on-change',\n        illustrate: '清空时触发',\n        default: '无',\n    },\n]);\n</script>\n\n<style lang=\"scss\" scoped>\n</style>\n","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--9-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--9-oneOf-1-1!../../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--9-oneOf-1-2!../../../node_modules/sass-loader/dist/cjs.js??ref--9-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../../node_modules/vue-loader-v16/dist/index.js??ref--1-1!./query-mode.vue?vue&type=style&index=0&id=4770c1eb&lang=scss&scoped=true\""],"sourceRoot":""}